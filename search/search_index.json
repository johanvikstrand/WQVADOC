{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Home \u00b6 Welcome to the WideQuick Water & Wastewater application documentation. Here one can expect to find documentation regarding the following: The DataStore The Object Library Workviews Scripts Abbreviations \u00b6 For conveniance of the writer the use of several abbreiviations will be used throughout this document. These should be added to the following list: Word/Term Abbreviation Water & Wastewater Treatment W&W WideQuick WQ Developer DEV Requirements REQ Master Terminal Unit MTU Remote Terminal Unit RTU Input/Output I/O International Organization for Standardization ISO Open Systems Interconnection OSI Supervisory Control and Data Acquisition SCADA","title":"Home"},{"location":"#home","text":"Welcome to the WideQuick Water & Wastewater application documentation. Here one can expect to find documentation regarding the following: The DataStore The Object Library Workviews Scripts","title":"Home"},{"location":"#abbreviations","text":"For conveniance of the writer the use of several abbreiviations will be used throughout this document. These should be added to the following list: Word/Term Abbreviation Water & Wastewater Treatment W&W WideQuick WQ Developer DEV Requirements REQ Master Terminal Unit MTU Remote Terminal Unit RTU Input/Output I/O International Organization for Standardization ISO Open Systems Interconnection OSI Supervisory Control and Data Acquisition SCADA","title":"Abbreviations"},{"location":"Getting_Started/","text":"Getting Started \u00b6 WideQuick VA is developed by Kentima in WideQuick and is geared towards water and wastewater. The application contains a navigation system and features such as: Smart Objects Easy to build objects Symbols Historical data handeling Trend handeling and more ... Creating Your Own WideQuick VA application \u00b6 Once you have downloaded to WideQuick VA application there are a couple of steps that you have to follow to make the application work for you. 1. Create your Workviews and Workview Groups \u00b6 Open the WideQuick VA application in WideQuick Designer. It is time to start creating workviews for your plant. A guide for how to that can be found here. 2. Configure Suffixes \u00b6 It is now time to configure the suffixes so to suit your organization. A guide for that can be found here 3. Import tags \u00b6 Next step is to import your tags to the project. If you use MODBUS or OPC you can find a guide for that here 4. Create and Link your Objects \u00b6 You can now start connecting and linking objects in a workview of your choice that you created in Step 1 . For details on how to do so visit this page.","title":"Getting Started"},{"location":"Getting_Started/#getting-started","text":"WideQuick VA is developed by Kentima in WideQuick and is geared towards water and wastewater. The application contains a navigation system and features such as: Smart Objects Easy to build objects Symbols Historical data handeling Trend handeling and more ...","title":"Getting Started"},{"location":"Getting_Started/#creating-your-own-widequick-va-application","text":"Once you have downloaded to WideQuick VA application there are a couple of steps that you have to follow to make the application work for you.","title":"Creating Your Own WideQuick VA application"},{"location":"Getting_Started/#1-create-your-workviews-and-workview-groups","text":"Open the WideQuick VA application in WideQuick Designer. It is time to start creating workviews for your plant. A guide for how to that can be found here.","title":"1. Create your Workviews and Workview Groups"},{"location":"Getting_Started/#2-configure-suffixes","text":"It is now time to configure the suffixes so to suit your organization. A guide for that can be found here","title":"2. Configure Suffixes"},{"location":"Getting_Started/#3-import-tags","text":"Next step is to import your tags to the project. If you use MODBUS or OPC you can find a guide for that here","title":"3. Import tags"},{"location":"Getting_Started/#4-create-and-link-your-objects","text":"You can now start connecting and linking objects in a workview of your choice that you created in Step 1 . For details on how to do so visit this page.","title":"4. Create and Link your Objects"},{"location":"DataStore/","text":"The Data Store \u00b6 The Data Store is a central part of any WideQuick application. In this documentation you will find how the WideQuick VA application chooses to use the DataStore and what limitations are put onto, for example, the naming of tags.","title":"Index"},{"location":"DataStore/#the-data-store","text":"The Data Store is a central part of any WideQuick application. In this documentation you will find how the WideQuick VA application chooses to use the DataStore and what limitations are put onto, for example, the naming of tags.","title":"The Data Store"},{"location":"DataStore/Internal_Variables/","text":"Internal Variables \u00b6 Internal Variables are in WideQuick used to store values internally in the system. Internal variables are therefore also only accessable to the system itself. Internal variables are both readable and writeable. The WideQuick VA application uses the following internal variables: Variable Name Type Description dynTouchVisible Boolean When false the boarder of the dynTouch is hidden otherwise visable supportGlobalFontSize Integer Sets fontsize for all the support objects, if not specified for a specific object themeToggle Boolean When false displays light theme otherwise dark","title":"Internal Variables"},{"location":"DataStore/Internal_Variables/#internal-variables","text":"Internal Variables are in WideQuick used to store values internally in the system. Internal variables are therefore also only accessable to the system itself. Internal variables are both readable and writeable. The WideQuick VA application uses the following internal variables: Variable Name Type Description dynTouchVisible Boolean When false the boarder of the dynTouch is hidden otherwise visable supportGlobalFontSize Integer Sets fontsize for all the support objects, if not specified for a specific object themeToggle Boolean When false displays light theme otherwise dark","title":"Internal Variables"},{"location":"DataStore/Alarms/","text":"Alarms \u00b6 What is an alarm? An alarm is audible and/or visible means of indicating to the operator an equipment malfunction, process deviation, or abnormal condition requiring a response There are two different types of alarms in WideQuick VA. One of them is user defined alarms and the other is alarm tags. The difference between the two will be explained below. NOTE: For the following examples we will use: Skane.Kallby.AS01_Motor as an example. User defined alarms \u00b6 User defined alarms are alarms that can be created by the user. To create an alarm and connect it to an object. Right click on alarms in the project tree and select \"Add group\". Next name the group according to the following structure: Alarm.Connection.Device EXAMPLE: Alarm.Skane.Kallby Next create a new alarm acording to the following strucutre: System_Object_UserDefinedName EXAMPLE: AS01_Motor_MVH BILD The newly created alarm will then be visible in both the general alarm page(L\u00e4nk?) and the Alarm Popup for the specific object. In this case Skane.Kallby.AS01_Motor. See picture below: The alarm popup page for Skane.Kallby.AS01_Pump06 Alarm tags \u00b6 Alarm tags are all tags with a suffix belonging to the alarm or warning group in suffix.JSON. See exampel below. Once this tag turns high the icon for the object connected to this tag will turn yellow/red depending on if it is an alarm or a warning. Furthermore if the smart-object contains an Alarm Status the alarms status indicator will be visible. Example: Suffixes defined as Alarms and warnings in Suffix.JSON A collection of alarm tags (OPC)","title":"Index"},{"location":"DataStore/Alarms/#alarms","text":"What is an alarm? An alarm is audible and/or visible means of indicating to the operator an equipment malfunction, process deviation, or abnormal condition requiring a response There are two different types of alarms in WideQuick VA. One of them is user defined alarms and the other is alarm tags. The difference between the two will be explained below. NOTE: For the following examples we will use: Skane.Kallby.AS01_Motor as an example.","title":"Alarms"},{"location":"DataStore/Alarms/#user-defined-alarms","text":"User defined alarms are alarms that can be created by the user. To create an alarm and connect it to an object. Right click on alarms in the project tree and select \"Add group\". Next name the group according to the following structure: Alarm.Connection.Device EXAMPLE: Alarm.Skane.Kallby Next create a new alarm acording to the following strucutre: System_Object_UserDefinedName EXAMPLE: AS01_Motor_MVH BILD The newly created alarm will then be visible in both the general alarm page(L\u00e4nk?) and the Alarm Popup for the specific object. In this case Skane.Kallby.AS01_Motor. See picture below: The alarm popup page for Skane.Kallby.AS01_Pump06","title":"User defined alarms"},{"location":"DataStore/Alarms/#alarm-tags","text":"Alarm tags are all tags with a suffix belonging to the alarm or warning group in suffix.JSON. See exampel below. Once this tag turns high the icon for the object connected to this tag will turn yellow/red depending on if it is an alarm or a warning. Furthermore if the smart-object contains an Alarm Status the alarms status indicator will be visible. Example: Suffixes defined as Alarms and warnings in Suffix.JSON A collection of alarm tags (OPC)","title":"Alarm tags"},{"location":"DataStore/Alarms/Alarm%20Stratergy/","text":"Alarm Stratergy \u00b6 An alarm strategy is an important aspect of a SCADA (Supervisory Control and Data Acquisition) system, as it helps to ensure the safety, reliability, and efficiency of the process being monitored. An effective alarm strategy should balance the need for timely notification of issues with the need to minimize false alarms, which can lead to operator fatigue and decreased effectiveness.","title":"Alarm Stratergy"},{"location":"DataStore/Alarms/Alarm%20Stratergy/#alarm-stratergy","text":"An alarm strategy is an important aspect of a SCADA (Supervisory Control and Data Acquisition) system, as it helps to ensure the safety, reliability, and efficiency of the process being monitored. An effective alarm strategy should balance the need for timely notification of issues with the need to minimize false alarms, which can lead to operator fatigue and decreased effectiveness.","title":"Alarm Stratergy"},{"location":"DataStore/Tag_Structure/","text":"Tag Structure \u00b6 WideQuick VA supports both OPC and MODBUS tags. The setup is different for OPC and MODBUS but the tagstructure is the same. Following the structure: Connection Device System Object Suffix The names of these is arbitrary and they can be named whatever the user desires. These will later be used to connect OPC tags to the different objects placed in workviews. For these examples we will use the following information as an example. Connection: Skane Device: Kallby System: AS01 Object: Pump Suffix: _MV OPC \u00b6 WideQuick VA support both OPC DA and OPC UA tags. To import tags right-click on DataStore in the project tree and select \"Add OPC (UA) Server\". Name the connection to whatever you want and fill in the rest of the information. NOTE: The chosen name will NOT affect how the tags will be named Next right click on the newly created server and select \"Add group\". Name the group whatever you want. NOTE: The chosen name will NOT affect how the tags will be named This will bring up a new page. Click on \"browse\" and import all desired OPC tags. Next. Rename the tags in the colomun \"WideQuick Name\". Rename all tags to follow the structure: Connection.Device.System_Object_Suffix Example: Skane.Kallby.AS01_Pump_MV MODBUS \u00b6 MODBUS tags follow the same structure as OPC tags. But due to differences in WideQuick the naming process is a bit different. First right-click on DataStore in the project tree and select \"Add Modbus ... connection\". NOTE: The name of the connection will be later become the \"Connection\" part in the tagName so choose the name wisely. In our example this would be \"Skane\" Next right-click on the newly created connection and select \"Add Device\". NOTE: THe name of the device will later become the \"Device\" part in the tagName so choose the name wisely. In our example this would \"Kallby\" This will bring up a new page. Click on \"add\". Name the new post according to the following structure: System_Object_Suffix In our example this would be: AS01_Motor_MV See below:","title":"Index"},{"location":"DataStore/Tag_Structure/#tag-structure","text":"WideQuick VA supports both OPC and MODBUS tags. The setup is different for OPC and MODBUS but the tagstructure is the same. Following the structure: Connection Device System Object Suffix The names of these is arbitrary and they can be named whatever the user desires. These will later be used to connect OPC tags to the different objects placed in workviews. For these examples we will use the following information as an example. Connection: Skane Device: Kallby System: AS01 Object: Pump Suffix: _MV","title":"Tag Structure"},{"location":"DataStore/Tag_Structure/#opc","text":"WideQuick VA support both OPC DA and OPC UA tags. To import tags right-click on DataStore in the project tree and select \"Add OPC (UA) Server\". Name the connection to whatever you want and fill in the rest of the information. NOTE: The chosen name will NOT affect how the tags will be named Next right click on the newly created server and select \"Add group\". Name the group whatever you want. NOTE: The chosen name will NOT affect how the tags will be named This will bring up a new page. Click on \"browse\" and import all desired OPC tags. Next. Rename the tags in the colomun \"WideQuick Name\". Rename all tags to follow the structure: Connection.Device.System_Object_Suffix Example: Skane.Kallby.AS01_Pump_MV","title":"OPC"},{"location":"DataStore/Tag_Structure/#modbus","text":"MODBUS tags follow the same structure as OPC tags. But due to differences in WideQuick the naming process is a bit different. First right-click on DataStore in the project tree and select \"Add Modbus ... connection\". NOTE: The name of the connection will be later become the \"Connection\" part in the tagName so choose the name wisely. In our example this would be \"Skane\" Next right-click on the newly created connection and select \"Add Device\". NOTE: THe name of the device will later become the \"Device\" part in the tagName so choose the name wisely. In our example this would \"Kallby\" This will bring up a new page. Click on \"add\". Name the new post according to the following structure: System_Object_Suffix In our example this would be: AS01_Motor_MV See below:","title":"MODBUS"},{"location":"DataStore/Tag_Structure/Suffixes/","text":"Suffixes \u00b6 Adding suffixes to tags is a great tool for categorizing different types of signals with common properties over an asortment of different objects. For example a motor and sensor both output a integer process value. Since the naming and grouping of suffixes can differ between plants and organizations WideQuick VA provides and easy to configure suffix structure. The suffixes and their groupings can be found in the suffix.json file in the WideQuick VA project directory which is then interperted by scSuffix ). suffix.json is a JSON file and have the following structure: \"suffix_group\" : { \"suffix_name\" : { \"Suffix\" : \"_XX\" , \"Description\" : \"Suffix description!\" } } \"suffix_group\" - A group of suffixes that belong together, for example alarm suffixes \"suffix_name\" - An indetifier of what the suffix handles, for example \"isOpen\" \"Suffix\" - The actual suffix ending that you want to use in your tag \"Description\" - A description that will apear in runtime to explain what the suffix does in for example support objects or common popups. Create new suffix \u00b6 blabls","title":"Suffixes"},{"location":"DataStore/Tag_Structure/Suffixes/#suffixes","text":"Adding suffixes to tags is a great tool for categorizing different types of signals with common properties over an asortment of different objects. For example a motor and sensor both output a integer process value. Since the naming and grouping of suffixes can differ between plants and organizations WideQuick VA provides and easy to configure suffix structure. The suffixes and their groupings can be found in the suffix.json file in the WideQuick VA project directory which is then interperted by scSuffix ). suffix.json is a JSON file and have the following structure: \"suffix_group\" : { \"suffix_name\" : { \"Suffix\" : \"_XX\" , \"Description\" : \"Suffix description!\" } } \"suffix_group\" - A group of suffixes that belong together, for example alarm suffixes \"suffix_name\" - An indetifier of what the suffix handles, for example \"isOpen\" \"Suffix\" - The actual suffix ending that you want to use in your tag \"Description\" - A description that will apear in runtime to explain what the suffix does in for example support objects or common popups.","title":"Suffixes"},{"location":"DataStore/Tag_Structure/Suffixes/#create-new-suffix","text":"blabls","title":"Create new suffix"},{"location":"Object_Library/","text":"Welcome to the Object Library! \u00b6","title":"Index"},{"location":"Object_Library/#welcome-to-the-object-library","text":"","title":"Welcome to the Object Library!"},{"location":"Object_Library/Other/","text":"Other \u00b6","title":"Index"},{"location":"Object_Library/Other/#other","text":"","title":"Other"},{"location":"Object_Library/Other/Buttons/","text":"","title":"Buttons"},{"location":"Object_Library/Smart_Objects/","text":"Smart Objects \u00b6 With Smart Objects the user can with ease connect a tags to any object in WideQuick with the help of a couple of objects from the Object Library . These objects can be divided into: Support Objects Symbols For more information on how to create a Smart Object please visit Create a Smart Object","title":"Index"},{"location":"Object_Library/Smart_Objects/#smart-objects","text":"With Smart Objects the user can with ease connect a tags to any object in WideQuick with the help of a couple of objects from the Object Library . These objects can be divided into: Support Objects Symbols For more information on how to create a Smart Object please visit Create a Smart Object","title":"Smart Objects"},{"location":"Object_Library/Smart_Objects/Create_a_Smart_Object/","text":"Create a Smart Object \u00b6 To create a Smart Object there are five steps to follow. The steps to follow are: Chose a symbol that represents the object you want to create, for instance a pump symbol from the Object Library. Pick a number of support objects that will highlight information about the object. Pick a dynTouch from the object library and group all, Ctrl + G , of the objects together. Once the objects are grouped, go through the properties tab and fill out any properties needed for the support objects, information of what they need can be found in their individual page. Start WideQuick VA and confirm that the object tag have been connected.","title":"Create a Smart Object"},{"location":"Object_Library/Smart_Objects/Create_a_Smart_Object/#create-a-smart-object","text":"To create a Smart Object there are five steps to follow. The steps to follow are: Chose a symbol that represents the object you want to create, for instance a pump symbol from the Object Library. Pick a number of support objects that will highlight information about the object. Pick a dynTouch from the object library and group all, Ctrl + G , of the objects together. Once the objects are grouped, go through the properties tab and fill out any properties needed for the support objects, information of what they need can be found in their individual page. Start WideQuick VA and confirm that the object tag have been connected.","title":"Create a Smart Object"},{"location":"Object_Library/Smart_Objects/Create_a_Support_Object/","text":"Create a Support Object \u00b6 When creating a new support object only there really aren't any limits to what you can create. However , there are some guidelines that you should follow to ensure that the new object will work alongside with the already existing ones. There are also functions in the Script Libraries that will make the process easier and quicker. Connecting to the tag structure through dynTouch \u00b6 For a support object to connect to the tag in the DataStore it needs the name of the tag it wants to connect to. The object that ensures all the other support objects have access to this is dynTouch . To get a hold of how this works, please read the onLoad() script on the dynTouch object and look at the already available support objects. A couple of useful functions \u00b6 There are functions available in the script library that today is used by existing support objects here is a list of a couple of them : scSuffix.getDescription() scSuffix.getSuffix() scSuffix.getAlarm() scObjectAnimation.rotateBinary() scObjectAnimation.rotate() scObjectAnimation.alarmColor() More functions that could be useful can be found in the Script part of this documentation.","title":"Create a Support Object"},{"location":"Object_Library/Smart_Objects/Create_a_Support_Object/#create-a-support-object","text":"When creating a new support object only there really aren't any limits to what you can create. However , there are some guidelines that you should follow to ensure that the new object will work alongside with the already existing ones. There are also functions in the Script Libraries that will make the process easier and quicker.","title":"Create a Support Object"},{"location":"Object_Library/Smart_Objects/Create_a_Support_Object/#connecting-to-the-tag-structure-through-dyntouch","text":"For a support object to connect to the tag in the DataStore it needs the name of the tag it wants to connect to. The object that ensures all the other support objects have access to this is dynTouch . To get a hold of how this works, please read the onLoad() script on the dynTouch object and look at the already available support objects.","title":"Connecting to the tag structure through dynTouch"},{"location":"Object_Library/Smart_Objects/Create_a_Support_Object/#a-couple-of-useful-functions","text":"There are functions available in the script library that today is used by existing support objects here is a list of a couple of them : scSuffix.getDescription() scSuffix.getSuffix() scSuffix.getAlarm() scObjectAnimation.rotateBinary() scObjectAnimation.rotate() scObjectAnimation.alarmColor() More functions that could be useful can be found in the Script part of this documentation.","title":"A couple of useful functions"},{"location":"Object_Library/Smart_Objects/Support_Objects/","text":"Support Objects \u00b6 Here you will find the following support objects. Support Object Description Alarm Status Displays a red circle if alarm active and a yellow rombus if a warning is active for object Analog Value Display Displays a tag value to a meter with warning and alarm limits Analog Value Display Bottom Displays a tag value to a meter with warning and alarm limits for low values Analog Value Display Top Displays a tag value to a meter with warning and alarm limits for high values Combo Value Allows user to show tags depending on suffix for a certain object in a drop down menu. Combo Value Desc Allows user to show tags and description depending on suffix for a certain object in a drop down menu. Gauge Displays a gauge for a tag value Name Displays the name of an object Static Value Displays Value for a predetermined tag Static Value Desc Displays value and description for a predetermined tag Status Indicator Displays a boolean value as an on/off-lamp indicator Status Indicator Desc Displays a boolean value and description as an on/off-lamp indicator Toggle Allows user to Toggle a boolean value in the workview Value Select Allows user to select a value to be shown from the Tab popup dynTouch Ties together all support objects to a smart object","title":"Index"},{"location":"Object_Library/Smart_Objects/Support_Objects/#support-objects","text":"Here you will find the following support objects. Support Object Description Alarm Status Displays a red circle if alarm active and a yellow rombus if a warning is active for object Analog Value Display Displays a tag value to a meter with warning and alarm limits Analog Value Display Bottom Displays a tag value to a meter with warning and alarm limits for low values Analog Value Display Top Displays a tag value to a meter with warning and alarm limits for high values Combo Value Allows user to show tags depending on suffix for a certain object in a drop down menu. Combo Value Desc Allows user to show tags and description depending on suffix for a certain object in a drop down menu. Gauge Displays a gauge for a tag value Name Displays the name of an object Static Value Displays Value for a predetermined tag Static Value Desc Displays value and description for a predetermined tag Status Indicator Displays a boolean value as an on/off-lamp indicator Status Indicator Desc Displays a boolean value and description as an on/off-lamp indicator Toggle Allows user to Toggle a boolean value in the workview Value Select Allows user to select a value to be shown from the Tab popup dynTouch Ties together all support objects to a smart object","title":"Support Objects"},{"location":"Object_Library/Smart_Objects/Support_Objects/Alarm_Status/","text":"Alarm Status \u00b6 Alarm Status is used to indicate a sum alarm for a certain object. It does this with functions scSuffix.warning() and scSuffix.alarm() in script library scSuffix . If an alarm is active a red circle will show. If a warning is active a yellow rombulus will show. What constitutes as an alarm or a warning depends on what group the tag belongs to in the json file, suffix.json .","title":"Alarm Status"},{"location":"Object_Library/Smart_Objects/Support_Objects/Alarm_Status/#alarm-status","text":"Alarm Status is used to indicate a sum alarm for a certain object. It does this with functions scSuffix.warning() and scSuffix.alarm() in script library scSuffix . If an alarm is active a red circle will show. If a warning is active a yellow rombulus will show. What constitutes as an alarm or a warning depends on what group the tag belongs to in the json file, suffix.json .","title":"Alarm Status"},{"location":"Object_Library/Smart_Objects/Support_Objects/Analog_Value_Display/","text":"Analog Value Display \u00b6 Analog Value Display gives a visual representation of a signal relative to its limits. This is a powerful way of representing data when the raw data is hard to put into context. For example a certain cubic meter of a fluid might only provide useful information if you know how big the tank is relative to that number. Properties \u00b6 Propery Description min Lowest Value max Maximum Value warningYellow % of total meter for yellow limit warningRed % of total meter for red limit Suffix suffix for value to display","title":"Analog Value Display"},{"location":"Object_Library/Smart_Objects/Support_Objects/Analog_Value_Display/#analog-value-display","text":"Analog Value Display gives a visual representation of a signal relative to its limits. This is a powerful way of representing data when the raw data is hard to put into context. For example a certain cubic meter of a fluid might only provide useful information if you know how big the tank is relative to that number.","title":"Analog Value Display"},{"location":"Object_Library/Smart_Objects/Support_Objects/Analog_Value_Display/#properties","text":"Propery Description min Lowest Value max Maximum Value warningYellow % of total meter for yellow limit warningRed % of total meter for red limit Suffix suffix for value to display","title":"Properties"},{"location":"Object_Library/Smart_Objects/Support_Objects/Analog_Value_Display_Bottom/","text":"Analog Value Display Bottom \u00b6 Analog Value Display gives a visual representation of a signal relative to its limits. This is a powerful way of representing data when the raw data is hard to put into context. For example a certain cubic meter of a fluid might only provide useful information if you know how big the tank is relative to that number. Use this when low values are the area of concern. Properties \u00b6 Propery Description min Lowest Value max Maximum Value warningYellow % of total meter for yellow limit warningRed % of total meter for red limit suffix Suffix for value to display","title":"Analog Value Display Bottom"},{"location":"Object_Library/Smart_Objects/Support_Objects/Analog_Value_Display_Bottom/#analog-value-display-bottom","text":"Analog Value Display gives a visual representation of a signal relative to its limits. This is a powerful way of representing data when the raw data is hard to put into context. For example a certain cubic meter of a fluid might only provide useful information if you know how big the tank is relative to that number. Use this when low values are the area of concern.","title":"Analog Value Display Bottom"},{"location":"Object_Library/Smart_Objects/Support_Objects/Analog_Value_Display_Bottom/#properties","text":"Propery Description min Lowest Value max Maximum Value warningYellow % of total meter for yellow limit warningRed % of total meter for red limit suffix Suffix for value to display","title":"Properties"},{"location":"Object_Library/Smart_Objects/Support_Objects/Analog_Value_Display_Top/","text":"Analog Value Display Top \u00b6 Analog Value Display gives a visual representation of a signal relative to its limits. This is a powerful way of representing data when the raw data is hard to put into context. For example a certain cubic meter of a fluid might only provide useful information if you know how big the tank is relative to that number. Use this Analog Vaule Display when high values are areas of concern. Properties \u00b6 Propery Description min Lowest Value max Maximum Value warningYellow % of total meter for yellow limit warningRed % of total meter for red limit suffix Suffix for value to display","title":"Analog Value Display Top"},{"location":"Object_Library/Smart_Objects/Support_Objects/Analog_Value_Display_Top/#analog-value-display-top","text":"Analog Value Display gives a visual representation of a signal relative to its limits. This is a powerful way of representing data when the raw data is hard to put into context. For example a certain cubic meter of a fluid might only provide useful information if you know how big the tank is relative to that number. Use this Analog Vaule Display when high values are areas of concern.","title":"Analog Value Display Top"},{"location":"Object_Library/Smart_Objects/Support_Objects/Analog_Value_Display_Top/#properties","text":"Propery Description min Lowest Value max Maximum Value warningYellow % of total meter for yellow limit warningRed % of total meter for red limit suffix Suffix for value to display","title":"Properties"},{"location":"Object_Library/Smart_Objects/Support_Objects/Combo_Value/","text":"Combo Value \u00b6 This support object will allow the operator to display values and units for all the suffixes available for the object by chosing it in the drop down menu. Description \u00b6 Property Description fontSize Sets size of text in support object if non is provided size is defined by internal variable supportGlobalFontSize","title":"Combo Value"},{"location":"Object_Library/Smart_Objects/Support_Objects/Combo_Value/#combo-value","text":"This support object will allow the operator to display values and units for all the suffixes available for the object by chosing it in the drop down menu.","title":"Combo Value"},{"location":"Object_Library/Smart_Objects/Support_Objects/Combo_Value/#description","text":"Property Description fontSize Sets size of text in support object if non is provided size is defined by internal variable supportGlobalFontSize","title":"Description"},{"location":"Object_Library/Smart_Objects/Support_Objects/Combo_Value_Desc/","text":"Combo Value Desc \u00b6 This support object will allow the operator to display values and units for all the suffixes available for the object by chosing it in the drop down menu. It will also display the description for the specified suffix with function scSuffix.getDescription() . Description \u00b6 Property Description fontSize Sets size of text in support object if non is provided size is defined by internal variable supportGlobalFontSize","title":"Combo Value Desc"},{"location":"Object_Library/Smart_Objects/Support_Objects/Combo_Value_Desc/#combo-value-desc","text":"This support object will allow the operator to display values and units for all the suffixes available for the object by chosing it in the drop down menu. It will also display the description for the specified suffix with function scSuffix.getDescription() .","title":"Combo Value Desc"},{"location":"Object_Library/Smart_Objects/Support_Objects/Combo_Value_Desc/#description","text":"Property Description fontSize Sets size of text in support object if non is provided size is defined by internal variable supportGlobalFontSize","title":"Description"},{"location":"Object_Library/Smart_Objects/Support_Objects/Gauge/","text":"Gauge \u00b6 Gauge is a support object that displays a tag value in a half circle as well as a numeric with unit. Best practise when using this object is to disconnect it and feed the min and max values into WideQuick Designer. However, if you desire for the gauge to be more flexible in runtime use dynamics. Properties \u00b6 Property Description val tag you disre to diplay in runtime Name Name displayed at top of the gauge","title":"Gauge"},{"location":"Object_Library/Smart_Objects/Support_Objects/Gauge/#gauge","text":"Gauge is a support object that displays a tag value in a half circle as well as a numeric with unit. Best practise when using this object is to disconnect it and feed the min and max values into WideQuick Designer. However, if you desire for the gauge to be more flexible in runtime use dynamics.","title":"Gauge"},{"location":"Object_Library/Smart_Objects/Support_Objects/Gauge/#properties","text":"Property Description val tag you disre to diplay in runtime Name Name displayed at top of the gauge","title":"Properties"},{"location":"Object_Library/Smart_Objects/Support_Objects/Name/","text":"Name \u00b6 This support object displays the name of the object it belongs to. The fontsize of this object is either set by its property or by the internal variable supportGlobalFontSize . Properties \u00b6 Property Description fontSize Sets fontSize of this object","title":"Name"},{"location":"Object_Library/Smart_Objects/Support_Objects/Name/#name","text":"This support object displays the name of the object it belongs to. The fontsize of this object is either set by its property or by the internal variable supportGlobalFontSize .","title":"Name"},{"location":"Object_Library/Smart_Objects/Support_Objects/Name/#properties","text":"Property Description fontSize Sets fontSize of this object","title":"Properties"},{"location":"Object_Library/Smart_Objects/Support_Objects/Static_Value/","text":"Static Value Description \u00b6 Static Value Description displays a tag value for tag suffix . Properties \u00b6 Property Description suffix Suffix that you want to show for this object fontSize Sets fontSize of this object","title":"Static Value"},{"location":"Object_Library/Smart_Objects/Support_Objects/Static_Value/#static-value-description","text":"Static Value Description displays a tag value for tag suffix .","title":"Static Value Description"},{"location":"Object_Library/Smart_Objects/Support_Objects/Static_Value/#properties","text":"Property Description suffix Suffix that you want to show for this object fontSize Sets fontSize of this object","title":"Properties"},{"location":"Object_Library/Smart_Objects/Support_Objects/Static_Value_Desc/","text":"Static Value Description \u00b6 Static Value Description displays a tag value for tag suffix and the discription with function scSuffix.getDescription() . Properties \u00b6 Property Description suffix Suffix that you want to show for this object fontSize Sets fontSize of this object","title":"Static Value Desc"},{"location":"Object_Library/Smart_Objects/Support_Objects/Static_Value_Desc/#static-value-description","text":"Static Value Description displays a tag value for tag suffix and the discription with function scSuffix.getDescription() .","title":"Static Value Description"},{"location":"Object_Library/Smart_Objects/Support_Objects/Static_Value_Desc/#properties","text":"Property Description suffix Suffix that you want to show for this object fontSize Sets fontSize of this object","title":"Properties"},{"location":"Object_Library/Smart_Objects/Support_Objects/Status_Indicator/","text":"Status Indicator \u00b6 Displays a boolean value tag for property suffix as a indicator lamp. Properties \u00b6 Property Description suffix Suffix that you want to show for this object","title":"Status Indicator"},{"location":"Object_Library/Smart_Objects/Support_Objects/Status_Indicator/#status-indicator","text":"Displays a boolean value tag for property suffix as a indicator lamp.","title":"Status Indicator"},{"location":"Object_Library/Smart_Objects/Support_Objects/Status_Indicator/#properties","text":"Property Description suffix Suffix that you want to show for this object","title":"Properties"},{"location":"Object_Library/Smart_Objects/Support_Objects/Status_Indicator_Desc/","text":"Status Indicator Description \u00b6 Displays a boolean value tag for property suffix as a indicator lamp. The object also displays the suffix description that it fetches with function scSuffix.getDescription() . Font size of text is set either by fontSize or if no value is given it is set by supportGlobalFontSize . Properties \u00b6 Property Description suffix Suffix that you want to show for this object fontSize Sets fontSize of this object","title":"Status Indicator Desc"},{"location":"Object_Library/Smart_Objects/Support_Objects/Status_Indicator_Desc/#status-indicator-description","text":"Displays a boolean value tag for property suffix as a indicator lamp. The object also displays the suffix description that it fetches with function scSuffix.getDescription() . Font size of text is set either by fontSize or if no value is given it is set by supportGlobalFontSize .","title":"Status Indicator Description"},{"location":"Object_Library/Smart_Objects/Support_Objects/Status_Indicator_Desc/#properties","text":"Property Description suffix Suffix that you want to show for this object fontSize Sets fontSize of this object","title":"Properties"},{"location":"Object_Library/Smart_Objects/Support_Objects/Toggle/","text":"Toggle \u00b6 Allows user to Toggle a boolean value directly in the workview. suffix sets what tag is being toggled.Font size of text is set either by fontSize or if no value is given it is set by supportGlobalFontSize . Properties \u00b6 Property Description suffix Suffix that you want to show for this object fontSize Sets fontSize of this object","title":"Toggle"},{"location":"Object_Library/Smart_Objects/Support_Objects/Toggle/#toggle","text":"Allows user to Toggle a boolean value directly in the workview. suffix sets what tag is being toggled.Font size of text is set either by fontSize or if no value is given it is set by supportGlobalFontSize .","title":"Toggle"},{"location":"Object_Library/Smart_Objects/Support_Objects/Toggle/#properties","text":"Property Description suffix Suffix that you want to show for this object fontSize Sets fontSize of this object","title":"Properties"},{"location":"Object_Library/Smart_Objects/Support_Objects/Value_Select/","text":"Value Select \u00b6 This support object is tightly relatived to the Common Popup: Tabs . The purpose of this support object is to be able to set what values you want to display in runetime without cluttering the workview. Therefore you can select what suffix you want to display as well as if you want to show suffix description, fetched by [scSuffic.getDescription()] and unit of the tag. Font size of text is set either by fontSize or if no value is given it is set by supportGlobalFontSize . Properties \u00b6 Property Description stateVar This property is set by script and should not be filled out Sets path to tag in DataStore fontSize Sets fontSize of this object","title":"Value Select"},{"location":"Object_Library/Smart_Objects/Support_Objects/Value_Select/#value-select","text":"This support object is tightly relatived to the Common Popup: Tabs . The purpose of this support object is to be able to set what values you want to display in runetime without cluttering the workview. Therefore you can select what suffix you want to display as well as if you want to show suffix description, fetched by [scSuffic.getDescription()] and unit of the tag. Font size of text is set either by fontSize or if no value is given it is set by supportGlobalFontSize .","title":"Value Select"},{"location":"Object_Library/Smart_Objects/Support_Objects/Value_Select/#properties","text":"Property Description stateVar This property is set by script and should not be filled out Sets path to tag in DataStore fontSize Sets fontSize of this object","title":"Properties"},{"location":"Object_Library/Smart_Objects/Support_Objects/dynTouch/","text":"dynTouch \u00b6 dynTouch is the Support Object that ties all of the other Support Objects together to represent a unique smart object. Please visit Create a Smart Object for more information . Properties \u00b6 Property Description Connection first of three indicies for a tag name Device second of three indicies for a tag name System third of three indicies for a tag name ObjectName Name of Object For a more detailed look on the Tag Structure .","title":"dynTouch"},{"location":"Object_Library/Smart_Objects/Support_Objects/dynTouch/#dyntouch","text":"dynTouch is the Support Object that ties all of the other Support Objects together to represent a unique smart object. Please visit Create a Smart Object for more information .","title":"dynTouch"},{"location":"Object_Library/Smart_Objects/Support_Objects/dynTouch/#properties","text":"Property Description Connection first of three indicies for a tag name Device second of three indicies for a tag name System third of three indicies for a tag name ObjectName Name of Object For a more detailed look on the Tag Structure .","title":"Properties"},{"location":"Object_Library/Symbols/","text":"Symbols \u00b6 Many of the symbols in WideQuick VA are derived from a standardized set of Piping and Instrumentation diagram, P&ID, symbols. They exist for all major components and lines, such as valves, vessels, pumps, compressors. The ISA S5.1, ISO 10628, and BS 5070 cover the standardization of P&ID symbols. Currently the following symbol categories are available: Grates Motors Pipes Pumps Sensors Valves Vessles","title":"Index"},{"location":"Object_Library/Symbols/#symbols","text":"Many of the symbols in WideQuick VA are derived from a standardized set of Piping and Instrumentation diagram, P&ID, symbols. They exist for all major components and lines, such as valves, vessels, pumps, compressors. The ISA S5.1, ISO 10628, and BS 5070 cover the standardization of P&ID symbols. Currently the following symbol categories are available: Grates Motors Pipes Pumps Sensors Valves Vessles","title":"Symbols"},{"location":"Object_Library/Symbols/Grates/","text":"Grates \u00b6 Symbol Name Bar Grate","title":"Grates"},{"location":"Object_Library/Symbols/Grates/#grates","text":"Symbol Name Bar Grate","title":"Grates"},{"location":"Object_Library/Symbols/Motors/","text":"Motors \u00b6 Symbol Name Motor 1 Motor 2 Motor 3 AC Motor DC Motor Generator AC Generator DC Generator","title":"Motors"},{"location":"Object_Library/Symbols/Motors/#motors","text":"Symbol Name Motor 1 Motor 2 Motor 3 AC Motor DC Motor Generator AC Generator DC Generator","title":"Motors"},{"location":"Object_Library/Symbols/Pipes/","text":"","title":"Pipes"},{"location":"Object_Library/Symbols/Pumps/","text":"","title":"Pumps"},{"location":"Object_Library/Symbols/Sensors/","text":"","title":"Sensors"},{"location":"Object_Library/Symbols/Valves/","text":"Valves \u00b6 Symbol Name Valve Globe Valve Rotary Valve Needle Valve Control Valve Piston Operated Valve Back Pressure Regulator Cock Valve Check Valve Check Valve2 Butterfly Valve Flanged Valve Flanged Valve 2 Angle Bowdown Valve Normaly Closed Ball Valve Normaly Closed Ball Valve Flow Meter","title":"Valves"},{"location":"Object_Library/Symbols/Valves/#valves","text":"Symbol Name Valve Globe Valve Rotary Valve Needle Valve Control Valve Piston Operated Valve Back Pressure Regulator Cock Valve Check Valve Check Valve2 Butterfly Valve Flanged Valve Flanged Valve 2 Angle Bowdown Valve Normaly Closed Ball Valve Normaly Closed Ball Valve Flow Meter","title":"Valves"},{"location":"Object_Library/Symbols/Vessels/","text":"Vessels \u00b6","title":"Vessels"},{"location":"Object_Library/Symbols/Vessels/#vessels","text":"","title":"Vessels"},{"location":"Scripts/","text":"Documentation \u00b6 try \u00b6 smartPopup = function (obj) \u00b6 Constructor for smartPopup object - smartPopup handles suffix and privilege requirements and and contains function to build the popup menu Parameters: obj \u2014 Object \u2014 - object clicked in workview that opens popup this.generateTabs = function (suffix) \u00b6 generateTabs() - Generates what tabs are available for this particular object Parameters: suffix \u2014 Object \u2014 - Suffixes available in project Returns: Array \u2014 returnList - Tabs available to the smartpopup object this.getTabs = function () \u00b6 Gets the tabs for This smartPopup object Returns: Array \u2014 tabs - tabs for this smartPopup this.updateProperties = function () \u00b6 Updates the properties, suffix and tabs, for This smartPopup object and saves to scLibrary array this.getSuffix = function () \u00b6 Gets the available suffixes for This smartPopup object to show a tab Returns: Object \u2014 suffix - suffixes available suffixes for This smartPopup object this.getObj = function () \u00b6 Gets the object that opened This smartPopup object Returns: Object \u2014 obj - object in workview to open popup this.hasPriv = function (priv) \u00b6 WRITE THIS COMMENT Parameters: priv \u2014 * \u2014 Returns: `` \u2014 this.build = function (view) \u00b6 Populates the workview with appropriate buttons for the popup menu Parameters: view \u2014 Workview \u2014 - View represents the popup window and owns a couple of properties to pass on a reference as we change inbetween different popup views","title":"Documentation"},{"location":"Scripts/#documentation","text":"","title":"Documentation"},{"location":"Scripts/#try","text":"","title":"try"},{"location":"Scripts/#smartpopup-function-obj","text":"Constructor for smartPopup object - smartPopup handles suffix and privilege requirements and and contains function to build the popup menu Parameters: obj \u2014 Object \u2014 - object clicked in workview that opens popup","title":"smartPopup = function (obj)"},{"location":"Scripts/#thisgeneratetabs-function-suffix","text":"generateTabs() - Generates what tabs are available for this particular object Parameters: suffix \u2014 Object \u2014 - Suffixes available in project Returns: Array \u2014 returnList - Tabs available to the smartpopup object","title":"this.generateTabs = function (suffix)"},{"location":"Scripts/#thisgettabs-function","text":"Gets the tabs for This smartPopup object Returns: Array \u2014 tabs - tabs for this smartPopup","title":"this.getTabs = function ()"},{"location":"Scripts/#thisupdateproperties-function","text":"Updates the properties, suffix and tabs, for This smartPopup object and saves to scLibrary array","title":"this.updateProperties = function ()"},{"location":"Scripts/#thisgetsuffix-function","text":"Gets the available suffixes for This smartPopup object to show a tab Returns: Object \u2014 suffix - suffixes available suffixes for This smartPopup object","title":"this.getSuffix = function ()"},{"location":"Scripts/#thisgetobj-function","text":"Gets the object that opened This smartPopup object Returns: Object \u2014 obj - object in workview to open popup","title":"this.getObj = function ()"},{"location":"Scripts/#thishaspriv-function-priv","text":"WRITE THIS COMMENT Parameters: priv \u2014 * \u2014 Returns: `` \u2014","title":"this.hasPriv = function (priv)"},{"location":"Scripts/#thisbuild-function-view","text":"Populates the workview with appropriate buttons for the popup menu Parameters: view \u2014 Workview \u2014 - View represents the popup window and owns a couple of properties to pass on a reference as we change inbetween different popup views","title":"this.build = function (view)"},{"location":"Scripts/scAlarm/","text":"scAlarm \u00b6 this.init = function(ref) \u00b6 Takes the paramater ref and counts the number of active alarms and sets activeAlarms to this number. Parameters: ref \u2014 DataStore \u2014 The DataStore for the system alarmEventHandler = function (tagName, ref, treeView) \u00b6 Constructor for the alarmEventHandler Parameters: tagName \u2014 String \u2014 Name of the tag for which the alarmEventHandler is created ref \u2014 DataStore \u2014 Reference to the local DataStore of the tag treeView \u2014 TreeViewObject \u2014 Reference to the treeView where the data will be displayed this.getAlarms = function () \u00b6 Loops through all alarms in DataStore.Alarms and takes their name and status and pushes them into a returnList Returns: vector \u2014 A vector with all alarms and their status this.build = function () \u00b6 Builds the TreeView model of all alarms","title":"scAlarm"},{"location":"Scripts/scAlarm/#scalarm","text":"","title":"scAlarm"},{"location":"Scripts/scAlarm/#thisinit-functionref","text":"Takes the paramater ref and counts the number of active alarms and sets activeAlarms to this number. Parameters: ref \u2014 DataStore \u2014 The DataStore for the system","title":"this.init = function(ref)"},{"location":"Scripts/scAlarm/#alarmeventhandler-function-tagname-ref-treeview","text":"Constructor for the alarmEventHandler Parameters: tagName \u2014 String \u2014 Name of the tag for which the alarmEventHandler is created ref \u2014 DataStore \u2014 Reference to the local DataStore of the tag treeView \u2014 TreeViewObject \u2014 Reference to the treeView where the data will be displayed","title":"alarmEventHandler = function (tagName, ref, treeView)"},{"location":"Scripts/scAlarm/#thisgetalarms-function","text":"Loops through all alarms in DataStore.Alarms and takes their name and status and pushes them into a returnList Returns: vector \u2014 A vector with all alarms and their status","title":"this.getAlarms = function ()"},{"location":"Scripts/scAlarm/#thisbuild-function","text":"Builds the TreeView model of all alarms","title":"this.build = function ()"},{"location":"Scripts/scAlert/","text":"scAlert \u00b6 this.toFile = function(sString) \u00b6 Write text to file or dispatch to server Parameters: sString \u2014 String \u2014 Text which will be written to file (error message) this.deleteOldFiles = function() \u00b6 Deletes files older than seven days from today","title":"scAlert"},{"location":"Scripts/scAlert/#scalert","text":"","title":"scAlert"},{"location":"Scripts/scAlert/#thistofile-functionsstring","text":"Write text to file or dispatch to server Parameters: sString \u2014 String \u2014 Text which will be written to file (error message)","title":"this.toFile = function(sString)"},{"location":"Scripts/scAlert/#thisdeleteoldfiles-function","text":"Deletes files older than seven days from today","title":"this.deleteOldFiles = function()"},{"location":"Scripts/scDomParser/","text":"scDomParser \u00b6 DOMParser = function (xmlFilePath) \u00b6 Constructor for parsing an XML-file Parameters: xmlFilePath \u2014 String The file path to the XML file. this.xmlToJs = function (xml) \u00b6 builds xml code tagNames, attributes and values into a object tree structure into js Parameters: xml \u2014 Object \u2014 document Element of the constructor xml file Returns: Object \u2014 JSobject representation of XML-file this.parseXML = function (jsonFormatted) \u00b6 Parse XML-file into either json or js Parameters: jsonFormatted \u2014 Boolean \u2014 Sets if the return value will be of the type js or json, true for JSON and false for JS Returns: XML parsed to JSON string representation or xml parsed to JS","title":"scDomParser"},{"location":"Scripts/scDomParser/#scdomparser","text":"","title":"scDomParser"},{"location":"Scripts/scDomParser/#domparser-function-xmlfilepath","text":"Constructor for parsing an XML-file Parameters: xmlFilePath \u2014 String The file path to the XML file.","title":"DOMParser = function (xmlFilePath)"},{"location":"Scripts/scDomParser/#thisxmltojs-function-xml","text":"builds xml code tagNames, attributes and values into a object tree structure into js Parameters: xml \u2014 Object \u2014 document Element of the constructor xml file Returns: Object \u2014 JSobject representation of XML-file","title":"this.xmlToJs = function (xml)"},{"location":"Scripts/scDomParser/#thisparsexml-function-jsonformatted","text":"Parse XML-file into either json or js Parameters: jsonFormatted \u2014 Boolean \u2014 Sets if the return value will be of the type js or json, true for JSON and false for JS Returns: XML parsed to JSON string representation or xml parsed to JS","title":"this.parseXML = function (jsonFormatted)"},{"location":"Scripts/scHistory/","text":"scHistory \u00b6 historyHandler = function (History2) \u00b6 Constructor - Creates a handler for a History2 object Parameters: History2 \u2014 WQObject \u2014 An History2 object this.updateGraphs = function (listData) \u00b6 Adds/Removes graphs depending on active/inactive. Parameters: listData \u2014 Array \u2014 Contains all suffix for given tag in History.kvie this.addGraph = function (graph) \u00b6 addGraph() - Adds graph, if such graph exists, to History2 object. Parameters: graph \u2014 Array \u2014 Containing: [Name, tagName, Active(status)] of a graph in list this.removeGraph = function (graph) \u00b6 addGraph() - Removes graph, if such graph exists, to History2 object. Parameters: graph \u2014 Array \u2014 containing: [Name, tagName, Active(status)] of a graph in list this.generateColors = function (numOfSteps) \u00b6 generateColor() - Gives array of evenly seperated over the color spectrum based on number of colors needed Parameters: numOfSteps: \u2014 number steps to get color, means total colors Returns: Array \u2014 returnColors An array of colors this.load = function (list) \u00b6 load() - loads/reloads data for the HistoryHandler Parameters: list \u2014 Array \u2014 list of graphs in the history 2 object connected to the History Handler","title":"scHistory"},{"location":"Scripts/scHistory/#schistory","text":"","title":"scHistory"},{"location":"Scripts/scHistory/#historyhandler-function-history2","text":"Constructor - Creates a handler for a History2 object Parameters: History2 \u2014 WQObject \u2014 An History2 object","title":"historyHandler = function (History2)"},{"location":"Scripts/scHistory/#thisupdategraphs-function-listdata","text":"Adds/Removes graphs depending on active/inactive. Parameters: listData \u2014 Array \u2014 Contains all suffix for given tag in History.kvie","title":"this.updateGraphs = function (listData)"},{"location":"Scripts/scHistory/#thisaddgraph-function-graph","text":"addGraph() - Adds graph, if such graph exists, to History2 object. Parameters: graph \u2014 Array \u2014 Containing: [Name, tagName, Active(status)] of a graph in list","title":"this.addGraph = function (graph)"},{"location":"Scripts/scHistory/#thisremovegraph-function-graph","text":"addGraph() - Removes graph, if such graph exists, to History2 object. Parameters: graph \u2014 Array \u2014 containing: [Name, tagName, Active(status)] of a graph in list","title":"this.removeGraph = function (graph)"},{"location":"Scripts/scHistory/#thisgeneratecolors-function-numofsteps","text":"generateColor() - Gives array of evenly seperated over the color spectrum based on number of colors needed Parameters: numOfSteps: \u2014 number steps to get color, means total colors Returns: Array \u2014 returnColors An array of colors","title":"this.generateColors = function (numOfSteps)"},{"location":"Scripts/scHistory/#thisload-function-list","text":"load() - loads/reloads data for the HistoryHandler Parameters: list \u2014 Array \u2014 list of graphs in the history 2 object connected to the History Handler","title":"this.load = function (list)"},{"location":"Scripts/scLogger/","text":"scLogger \u00b6 this.sortLoggers = function () \u00b6 Reads the loggers XML file and converts all loggers into JavaScript object and places them in a vector for easier access. this.findLogger = function (Name) \u00b6 Takes a string, a tagName in most cases and loops through all loggers to see if any of them are logging the tagName. If several are found, returns the logger with shortest logging interval. Parameters: Name \u2014 String \u2014 The variable to find the logger for Returns: The logger that is logging the variable \"name\". Returns false if no logger is found.","title":"scLogger"},{"location":"Scripts/scLogger/#sclogger","text":"","title":"scLogger"},{"location":"Scripts/scLogger/#thissortloggers-function","text":"Reads the loggers XML file and converts all loggers into JavaScript object and places them in a vector for easier access.","title":"this.sortLoggers = function ()"},{"location":"Scripts/scLogger/#thisfindlogger-function-name","text":"Takes a string, a tagName in most cases and loops through all loggers to see if any of them are logging the tagName. If several are found, returns the logger with shortest logging interval. Parameters: Name \u2014 String \u2014 The variable to find the logger for Returns: The logger that is logging the variable \"name\". Returns false if no logger is found.","title":"this.findLogger = function (Name)"},{"location":"Scripts/scNav/","text":"scNav \u00b6 MenuNav = function (rootDir, MenuItemGroup) \u00b6 Parameters: rootDir \u2014 Directory \u2014 - The root directory where the search begins this.getViews = function (currentDir) \u00b6 Takes a directory as a paramater and returns a vector with the name and the path for all views in that directory Parameters: currentDir \u2014 FilePath \u2014 The directory where the search should start Returns: Vector \u2014 vector with the name and path for all workviews in the directory this.getDir = function () \u00b6 A function to return all entries in the rootDirectory which was specified in MenuNav Returns: Array \u2014 Returns an array of strings that lists all the entries. this.build = function () \u00b6 Populates the Navbar with all catalogues in the rootdirectory this.collapse = function (subSysList) \u00b6 Collapses all catalogues in the NavBar Parameters: subSysList \u2014 NavBarCatalogueGroup \u2014 List of subsystems this.expand = function (MenuItem, subSysList) \u00b6 Takes a catalogue in the NavBar and expands it. Parameters: MenuItem \u2014 MenuItem \u2014 the catalogue in the NavBar that is to be expanded subSysList \u2014 NavBarCatalogueGroup \u2014 the whole list of catalogues in the navBar","title":"scNav"},{"location":"Scripts/scNav/#scnav","text":"","title":"scNav"},{"location":"Scripts/scNav/#menunav-function-rootdir-menuitemgroup","text":"Parameters: rootDir \u2014 Directory \u2014 - The root directory where the search begins","title":"MenuNav = function (rootDir, MenuItemGroup)"},{"location":"Scripts/scNav/#thisgetviews-function-currentdir","text":"Takes a directory as a paramater and returns a vector with the name and the path for all views in that directory Parameters: currentDir \u2014 FilePath \u2014 The directory where the search should start Returns: Vector \u2014 vector with the name and path for all workviews in the directory","title":"this.getViews = function (currentDir)"},{"location":"Scripts/scNav/#thisgetdir-function","text":"A function to return all entries in the rootDirectory which was specified in MenuNav Returns: Array \u2014 Returns an array of strings that lists all the entries.","title":"this.getDir = function ()"},{"location":"Scripts/scNav/#thisbuild-function","text":"Populates the Navbar with all catalogues in the rootdirectory","title":"this.build = function ()"},{"location":"Scripts/scNav/#thiscollapse-function-subsyslist","text":"Collapses all catalogues in the NavBar Parameters: subSysList \u2014 NavBarCatalogueGroup \u2014 List of subsystems","title":"this.collapse = function (subSysList)"},{"location":"Scripts/scNav/#thisexpand-function-menuitem-subsyslist","text":"Takes a catalogue in the NavBar and expands it. Parameters: MenuItem \u2014 MenuItem \u2014 the catalogue in the NavBar that is to be expanded subSysList \u2014 NavBarCatalogueGroup \u2014 the whole list of catalogues in the navBar","title":"this.expand = function (MenuItem, subSysList)"},{"location":"Scripts/scObjectAnimation/","text":"scObjectAnimation \u00b6 this.rotateBinary= function(boolean,defaultVal,value) \u00b6 A function to rotate objects Parameters: boolean \u2014 boolean \u2014 Decides if the object should rotate or not. True for rotation and false for no rotation defaultVal \u2014 Interger \u2014 Starting rotation value \u2014 Interger \u2014 How much the object should rotate Returns: Interger \u2014 Outputs the new rotation value this.rotate=function(value,min,max) \u00b6 Normalizes min & max and rotates to object between 0-100% (0-90\u00b0) Parameters: value \u2014 Dobule \u2014 The actual value of the max min \u2014 Dobule \u2014 The minimum possible value of the tag max \u2014 Dobule \u2014 The maximum possible value of the tag Returns: Dobule \u2014 A rotation between 0-90\u00b0 this.alarmColor=function(tagName,ref) \u00b6 Takes a tagName and a refrence DataStore and return a color depending on of the tag has any active Alarms, Warnings or nothing Parameters: tagName \u2014 String \u2014 The tagName of the object we want to evaluate ref \u2014 DataStore \u2014 Reference to the Local DataStore Returns: Color \u2014 Alarm color from current theme","title":"scObjectAnimation"},{"location":"Scripts/scObjectAnimation/#scobjectanimation","text":"","title":"scObjectAnimation"},{"location":"Scripts/scObjectAnimation/#thisrotatebinary-functionbooleandefaultvalvalue","text":"A function to rotate objects Parameters: boolean \u2014 boolean \u2014 Decides if the object should rotate or not. True for rotation and false for no rotation defaultVal \u2014 Interger \u2014 Starting rotation value \u2014 Interger \u2014 How much the object should rotate Returns: Interger \u2014 Outputs the new rotation value","title":"this.rotateBinary= function(boolean,defaultVal,value)"},{"location":"Scripts/scObjectAnimation/#thisrotatefunctionvalueminmax","text":"Normalizes min & max and rotates to object between 0-100% (0-90\u00b0) Parameters: value \u2014 Dobule \u2014 The actual value of the max min \u2014 Dobule \u2014 The minimum possible value of the tag max \u2014 Dobule \u2014 The maximum possible value of the tag Returns: Dobule \u2014 A rotation between 0-90\u00b0","title":"this.rotate=function(value,min,max)"},{"location":"Scripts/scObjectAnimation/#thisalarmcolorfunctiontagnameref","text":"Takes a tagName and a refrence DataStore and return a color depending on of the tag has any active Alarms, Warnings or nothing Parameters: tagName \u2014 String \u2014 The tagName of the object we want to evaluate ref \u2014 DataStore \u2014 Reference to the Local DataStore Returns: Color \u2014 Alarm color from current theme","title":"this.alarmColor=function(tagName,ref)"},{"location":"Scripts/scPrototypes/","text":"scPrototypes \u00b6 String.prototype.replaceAll = function (searchValue, replaceValue) \u00b6 Replaces all occurances of searchValue with replaceValue Parameters: searchValue \u2014 String \u2014 The subString to replace replaceValue \u2014 String \u2014 The subString to replace with Returns: String \u2014 The new String with replace value instead of searchValue String.prototype.substringBetween = function (a, b) \u00b6 Takes a string and two values and returns the string in between the two values Parameters: a \u2014 String \u2014 Start string after where the cutting should begin b \u2014 String \u2014 End string where the cutting should end Returns: String \u2014 The string between a and b String.prototype.contains = function (searchString) \u00b6 Takes a string and searches for a substring Parameters: searchString \u2014 String \u2014 the substring that should be found Returns: boolean \u2014 Returns true if the substring is found, else if not. String.prototype.split = function (delimiter) \u00b6 Takes a string and splits it at every occurance of delimiter Parameters: delimiter \u2014 String \u2014 The delimiter where the string should be cut Returns: Array \u2014 Array where entries contain the called upon string split at delimiter String.prototype.includes = function (search, start) \u00b6 Determines if substring search is part of the called upon string Parameters: search \u2014 String \u2014 The string to be found start \u2014 Interger \u2014 Index of charchter where the search should begin Returns: Boolean \u2014 True if the substring is found, false if it is not found","title":"scPrototypes"},{"location":"Scripts/scPrototypes/#scprototypes","text":"","title":"scPrototypes"},{"location":"Scripts/scPrototypes/#stringprototypereplaceall-function-searchvalue-replacevalue","text":"Replaces all occurances of searchValue with replaceValue Parameters: searchValue \u2014 String \u2014 The subString to replace replaceValue \u2014 String \u2014 The subString to replace with Returns: String \u2014 The new String with replace value instead of searchValue","title":"String.prototype.replaceAll = function (searchValue, replaceValue)"},{"location":"Scripts/scPrototypes/#stringprototypesubstringbetween-function-a-b","text":"Takes a string and two values and returns the string in between the two values Parameters: a \u2014 String \u2014 Start string after where the cutting should begin b \u2014 String \u2014 End string where the cutting should end Returns: String \u2014 The string between a and b","title":"String.prototype.substringBetween = function (a, b)"},{"location":"Scripts/scPrototypes/#stringprototypecontains-function-searchstring","text":"Takes a string and searches for a substring Parameters: searchString \u2014 String \u2014 the substring that should be found Returns: boolean \u2014 Returns true if the substring is found, else if not.","title":"String.prototype.contains = function (searchString)"},{"location":"Scripts/scPrototypes/#stringprototypesplit-function-delimiter","text":"Takes a string and splits it at every occurance of delimiter Parameters: delimiter \u2014 String \u2014 The delimiter where the string should be cut Returns: Array \u2014 Array where entries contain the called upon string split at delimiter","title":"String.prototype.split = function (delimiter)"},{"location":"Scripts/scPrototypes/#stringprototypeincludes-function-search-start","text":"Determines if substring search is part of the called upon string Parameters: search \u2014 String \u2014 The string to be found start \u2014 Interger \u2014 Index of charchter where the search should begin Returns: Boolean \u2014 True if the substring is found, false if it is not found","title":"String.prototype.includes = function (search, start)"},{"location":"Scripts/scSmartPopup/","text":"scSmartPopup \u00b6 smartPopup = function (obj) \u00b6 Constructor for smartPopup object - smartPopup handles suffix and privilege requirements and and contains function to build the popup menu Parameters: obj \u2014 Object \u2014 object clicked in workview that opens popup this.generateTabs = function (suffix) \u00b6 generateTabs() - Generates what tabs are available for this particular object Parameters: suffix \u2014 Object \u2014 Suffixes available in project Returns: Array \u2014 returnList Tabs available to the smartpopup object this.getTabs = function () \u00b6 Gets the tabs for This smartPopup object Returns: Array \u2014 tabs for this smartPopup this.updateProperties = function () \u00b6 Updates the properties, suffix and tabs, for This smartPopup object and saves to scLibrary array this.getSuffix = function () \u00b6 Gets the available suffixes for This smartPopup object to show a tab Returns: Object \u2014 suffixes available suffixes for This smartPopup object this.getObj = function () \u00b6 Gets the object that opened This smartPopup object Returns: Object \u2014 object in workview to open popup this.hasPriv = function (priv) \u00b6 Returns a boolean value for if the current user has the input privilege Parameters: priv \u2014 String \u2014 The privilege that should be tested against the current users privileges Returns: Boolean \u2014 True if the user has the privilege, false otherwise this.build = function (view) \u00b6 Populates the workview with appropriate buttons for the popup menu Parameters: view \u2014 Workview \u2014 View represents the popup window and owns a couple of properties to pass on a reference as we change inbetween different popup views","title":"scSmartPopup"},{"location":"Scripts/scSmartPopup/#scsmartpopup","text":"","title":"scSmartPopup"},{"location":"Scripts/scSmartPopup/#smartpopup-function-obj","text":"Constructor for smartPopup object - smartPopup handles suffix and privilege requirements and and contains function to build the popup menu Parameters: obj \u2014 Object \u2014 object clicked in workview that opens popup","title":"smartPopup = function (obj)"},{"location":"Scripts/scSmartPopup/#thisgeneratetabs-function-suffix","text":"generateTabs() - Generates what tabs are available for this particular object Parameters: suffix \u2014 Object \u2014 Suffixes available in project Returns: Array \u2014 returnList Tabs available to the smartpopup object","title":"this.generateTabs = function (suffix)"},{"location":"Scripts/scSmartPopup/#thisgettabs-function","text":"Gets the tabs for This smartPopup object Returns: Array \u2014 tabs for this smartPopup","title":"this.getTabs = function ()"},{"location":"Scripts/scSmartPopup/#thisupdateproperties-function","text":"Updates the properties, suffix and tabs, for This smartPopup object and saves to scLibrary array","title":"this.updateProperties = function ()"},{"location":"Scripts/scSmartPopup/#thisgetsuffix-function","text":"Gets the available suffixes for This smartPopup object to show a tab Returns: Object \u2014 suffixes available suffixes for This smartPopup object","title":"this.getSuffix = function ()"},{"location":"Scripts/scSmartPopup/#thisgetobj-function","text":"Gets the object that opened This smartPopup object Returns: Object \u2014 object in workview to open popup","title":"this.getObj = function ()"},{"location":"Scripts/scSmartPopup/#thishaspriv-function-priv","text":"Returns a boolean value for if the current user has the input privilege Parameters: priv \u2014 String \u2014 The privilege that should be tested against the current users privileges Returns: Boolean \u2014 True if the user has the privilege, false otherwise","title":"this.hasPriv = function (priv)"},{"location":"Scripts/scSmartPopup/#thisbuild-function-view","text":"Populates the workview with appropriate buttons for the popup menu Parameters: view \u2014 Workview \u2014 View represents the popup window and owns a couple of properties to pass on a reference as we change inbetween different popup views","title":"this.build = function (view)"},{"location":"Scripts/scSuffix/","text":"scSuffix \u00b6 this.readFromFile = function (filePath) \u00b6 Parameters: filePath \u2014 String \u2014 relative path from project directory to json file Returns: Object \u2014 JS object representation of read json-file this.writeToFile = function (filePath, object) \u00b6 Parameters: filePath \u2014 String \u2014 relative path from project directory to json file object \u2014 Object \u2014 js object you want to save as json Returns: Boolean \u2014 True if successful this.alarm = function(tagName, ref) \u00b6 Takes a tagName and ref as paramaters and returns true if the tagName has any active alarmTags Parameters: tagName \u2014 String \u2014 The tagName that we want to search for active alarmTags on ref \u2014 DataStore \u2014 Reference to the DataStore where the tag is defined Returns: Boolean \u2014 True if the tagName has any active alarmTags else returns false this.warning = function(tagName, ref) \u00b6 Parameters: tagName \u2014 String \u2014 The tagName that we want to search for active warningTags on ref \u2014 DataStore \u2014 Reference to the DataStore where the tag is defined Returns: Boolean \u2014 True if the tagName has any active WarningTags else returns false this.getDescription = function(suffix) \u00b6 Takes a suffix and returns the description Parameters: suffix \u2014 String \u2014 The suffix for which we want to find the description for Returns: String \u2014 Description of the suffix as found in Suffix.JSON this.getAlarm = function (tagName, ref) \u00b6 Takes a tagName and returns all Alarm tags Parameters: tagName \u2014 String \u2014 The tagName that we want to search for alarmTags on ref \u2014 DataStore \u2014 Reference to the DataStore where the tag is defined Returns: Vector \u2014 A vector with all AlarmTags for this tagName this.getWarning = function (tagName, ref) \u00b6 Takes a tagName and returns all Warning tags Parameters: tagName \u2014 String \u2014 The tagName that we want to search for warningTags on ref \u2014 DataStore \u2014 Reference to the DataStore where the tag is defined Returns: Vector \u2014 A vector with all AlarmTags for this tagName this.getAlarmAndWarning = function(tagName, ref) \u00b6 Takes a tagName and returns all Alarm and Warning tags Parameters: tagName \u2014 String \u2014 the tagName that we want to search for warning- and alarmTags on ref \u2014 DataStore \u2014 Reference to the DataStore where the tag is defined Returns: Vector \u2014 A vector with all Alarm- and warningTags for this tagName this.getControl = function(tagName, ref) \u00b6 Takes a tagName and returns all Control tags Parameters: tagName \u2014 Stromg \u2014 The tagName that we want to search for controlTags on ref \u2014 DataStore \u2014 Reference to the DataStore where the tag is defined Returns: Vector \u2014 A vector with all ControlTags for this tagName this.getControlStatus = function(tagName,ref) \u00b6 Takes a tagName and returns all Control Status tags Parameters: tagName \u2014 String \u2014 The tagName that we want to search for control_statusTags on ref \u2014 DataStore \u2014 Reference to the DataStore where the tag is defined Returns: Vector \u2014 A vector with all Control StatusTags for this tagName this.getSuffix = function (tagName, ref) \u00b6 Takes a tagName and returns all tags for this tagName Parameters: tagName \u2014 String \u2014 The tagName that we want to find all the tags for ref \u2014 DataStore \u2014 Reference to the DataStore where the tag is defined Returns: Vector \u2014 A vector with all tags for this tagName","title":"scSuffix"},{"location":"Scripts/scSuffix/#scsuffix","text":"","title":"scSuffix"},{"location":"Scripts/scSuffix/#thisreadfromfile-function-filepath","text":"Parameters: filePath \u2014 String \u2014 relative path from project directory to json file Returns: Object \u2014 JS object representation of read json-file","title":"this.readFromFile = function (filePath)"},{"location":"Scripts/scSuffix/#thiswritetofile-function-filepath-object","text":"Parameters: filePath \u2014 String \u2014 relative path from project directory to json file object \u2014 Object \u2014 js object you want to save as json Returns: Boolean \u2014 True if successful","title":"this.writeToFile = function (filePath, object)"},{"location":"Scripts/scSuffix/#thisalarm-functiontagname-ref","text":"Takes a tagName and ref as paramaters and returns true if the tagName has any active alarmTags Parameters: tagName \u2014 String \u2014 The tagName that we want to search for active alarmTags on ref \u2014 DataStore \u2014 Reference to the DataStore where the tag is defined Returns: Boolean \u2014 True if the tagName has any active alarmTags else returns false","title":"this.alarm = function(tagName, ref)"},{"location":"Scripts/scSuffix/#thiswarning-functiontagname-ref","text":"Parameters: tagName \u2014 String \u2014 The tagName that we want to search for active warningTags on ref \u2014 DataStore \u2014 Reference to the DataStore where the tag is defined Returns: Boolean \u2014 True if the tagName has any active WarningTags else returns false","title":"this.warning = function(tagName, ref)"},{"location":"Scripts/scSuffix/#thisgetdescription-functionsuffix","text":"Takes a suffix and returns the description Parameters: suffix \u2014 String \u2014 The suffix for which we want to find the description for Returns: String \u2014 Description of the suffix as found in Suffix.JSON","title":"this.getDescription = function(suffix)"},{"location":"Scripts/scSuffix/#thisgetalarm-function-tagname-ref","text":"Takes a tagName and returns all Alarm tags Parameters: tagName \u2014 String \u2014 The tagName that we want to search for alarmTags on ref \u2014 DataStore \u2014 Reference to the DataStore where the tag is defined Returns: Vector \u2014 A vector with all AlarmTags for this tagName","title":"this.getAlarm = function (tagName, ref)"},{"location":"Scripts/scSuffix/#thisgetwarning-function-tagname-ref","text":"Takes a tagName and returns all Warning tags Parameters: tagName \u2014 String \u2014 The tagName that we want to search for warningTags on ref \u2014 DataStore \u2014 Reference to the DataStore where the tag is defined Returns: Vector \u2014 A vector with all AlarmTags for this tagName","title":"this.getWarning = function (tagName, ref)"},{"location":"Scripts/scSuffix/#thisgetalarmandwarning-functiontagname-ref","text":"Takes a tagName and returns all Alarm and Warning tags Parameters: tagName \u2014 String \u2014 the tagName that we want to search for warning- and alarmTags on ref \u2014 DataStore \u2014 Reference to the DataStore where the tag is defined Returns: Vector \u2014 A vector with all Alarm- and warningTags for this tagName","title":"this.getAlarmAndWarning = function(tagName, ref)"},{"location":"Scripts/scSuffix/#thisgetcontrol-functiontagname-ref","text":"Takes a tagName and returns all Control tags Parameters: tagName \u2014 Stromg \u2014 The tagName that we want to search for controlTags on ref \u2014 DataStore \u2014 Reference to the DataStore where the tag is defined Returns: Vector \u2014 A vector with all ControlTags for this tagName","title":"this.getControl = function(tagName, ref)"},{"location":"Scripts/scSuffix/#thisgetcontrolstatus-functiontagnameref","text":"Takes a tagName and returns all Control Status tags Parameters: tagName \u2014 String \u2014 The tagName that we want to search for control_statusTags on ref \u2014 DataStore \u2014 Reference to the DataStore where the tag is defined Returns: Vector \u2014 A vector with all Control StatusTags for this tagName","title":"this.getControlStatus = function(tagName,ref)"},{"location":"Scripts/scSuffix/#thisgetsuffix-function-tagname-ref","text":"Takes a tagName and returns all tags for this tagName Parameters: tagName \u2014 String \u2014 The tagName that we want to find all the tags for ref \u2014 DataStore \u2014 Reference to the DataStore where the tag is defined Returns: Vector \u2014 A vector with all tags for this tagName","title":"this.getSuffix = function (tagName, ref)"},{"location":"Scripts/scTrend/","text":"scTrend \u00b6 trendHandler = function(trend) \u00b6 Consturctor for a trendObject Parameters: Trend \u2014 Object \u2014 The trend object to be manipulated this.updateGraphs = function(listData) \u00b6 Takes an Array from a list and shows/hides graphs depending on if they are active or not Parameters: listData \u2014 Array \u2014 The array with all tags and if the should be active or not this.addGraph = function(tagName) \u00b6 Takes a tagName and tries to add it at the first available space Parameters: tagName \u2014 String \u2014 the tagName to be added to the trend this.removeGraph = function(tagName) \u00b6 Removes the tagName from the trend object Parameters: tagName \u2014 String \u2014 The tag to be removed from the trend this.getColor = function(index) \u00b6 Takes an entry from trend and returns the color Parameters: index \u2014 Integer \u2014 Index of the color to be returned Returns: Color \u2014 The color belonging to the index this.buildLegend = function(legend) \u00b6 Takes a legend object and builds it according to what the trend object is showing Parameters: legend \u2014 Object \u2014 The legend object to be expanded this.clearLegend = function(legend) \u00b6 Takes a legend object and empties it Parameters: legend \u2014 Oject \u2014 The legend to be cleard","title":"scTrend"},{"location":"Scripts/scTrend/#sctrend","text":"","title":"scTrend"},{"location":"Scripts/scTrend/#trendhandler-functiontrend","text":"Consturctor for a trendObject Parameters: Trend \u2014 Object \u2014 The trend object to be manipulated","title":"trendHandler = function(trend)"},{"location":"Scripts/scTrend/#thisupdategraphs-functionlistdata","text":"Takes an Array from a list and shows/hides graphs depending on if they are active or not Parameters: listData \u2014 Array \u2014 The array with all tags and if the should be active or not","title":"this.updateGraphs = function(listData)"},{"location":"Scripts/scTrend/#thisaddgraph-functiontagname","text":"Takes a tagName and tries to add it at the first available space Parameters: tagName \u2014 String \u2014 the tagName to be added to the trend","title":"this.addGraph = function(tagName)"},{"location":"Scripts/scTrend/#thisremovegraph-functiontagname","text":"Removes the tagName from the trend object Parameters: tagName \u2014 String \u2014 The tag to be removed from the trend","title":"this.removeGraph = function(tagName)"},{"location":"Scripts/scTrend/#thisgetcolor-functionindex","text":"Takes an entry from trend and returns the color Parameters: index \u2014 Integer \u2014 Index of the color to be returned Returns: Color \u2014 The color belonging to the index","title":"this.getColor = function(index)"},{"location":"Scripts/scTrend/#thisbuildlegend-functionlegend","text":"Takes a legend object and builds it according to what the trend object is showing Parameters: legend \u2014 Object \u2014 The legend object to be expanded","title":"this.buildLegend = function(legend)"},{"location":"Scripts/scTrend/#thisclearlegend-functionlegend","text":"Takes a legend object and empties it Parameters: legend \u2014 Oject \u2014 The legend to be cleard","title":"this.clearLegend = function(legend)"},{"location":"Workviews/","text":"Hello","title":"Index"},{"location":"Workviews/Creating_workviews/","text":"Introduction \u00b6 Creating new workviews in WideQuick VA is a very quick and easy process. Once the system and workviews have been created a link to them will be auto-generated in the navigation tree. Creating a workview folder \u00b6 The first step in creating workviews in WideQuick VA is to create a folder where the workviews will be placed. To do this right click on the Workspace folder inside workviews. Select \"Add Group\" as seen below: Name the folder. This folder will be called the \"System folder\" from here on. The name of the system folder is what will be shown in the navigation tree. This is automatically generated as seen below: Creating a workview \u00b6 Once a \"System folder\" has been created the next step is to create the workviews. Right click on the system folder you just created. Click \"Add workview\". Name the workview. WideQuick VA will now auto-generate both the system folder and all workviews and display them in the Navigation tree in runtime.","title":"Creating workviews"},{"location":"Workviews/Creating_workviews/#introduction","text":"Creating new workviews in WideQuick VA is a very quick and easy process. Once the system and workviews have been created a link to them will be auto-generated in the navigation tree.","title":"Introduction"},{"location":"Workviews/Creating_workviews/#creating-a-workview-folder","text":"The first step in creating workviews in WideQuick VA is to create a folder where the workviews will be placed. To do this right click on the Workspace folder inside workviews. Select \"Add Group\" as seen below: Name the folder. This folder will be called the \"System folder\" from here on. The name of the system folder is what will be shown in the navigation tree. This is automatically generated as seen below:","title":"Creating a workview folder"},{"location":"Workviews/Creating_workviews/#creating-a-workview","text":"Once a \"System folder\" has been created the next step is to create the workviews. Right click on the system folder you just created. Click \"Add workview\". Name the workview. WideQuick VA will now auto-generate both the system folder and all workviews and display them in the Navigation tree in runtime.","title":"Creating a workview"},{"location":"Workviews/Common_Popups/","text":"Common Popups \u00b6","title":"Index"},{"location":"Workviews/Common_Popups/#common-popups","text":"","title":"Common Popups"},{"location":"Workviews/Common_Popups/Alarm_Popup/","text":"The Alarm Popup pages shows all user defined alarms specific to the object. The page shows which alarms are active/inactive and which alarms have been acknowledged. The page also allows the user to both acknowledge and block alarms. The alarm popup page for Skane.Kallby.AS01_Pump06","title":"Alarm Popup"},{"location":"Workviews/Common_Popups/Config/","text":"The config page allows the user to put requirements on all common popup pages . There are two different types of requirements that can be configured. Both suffix and user-privileges. This setting is universal. Meaning if any change is made it will affect all object popup pages. Suffix requirements \u00b6 The column Suffix requirements allows the user to define which popup pages should be available depending och which suffixes the object has. For instance a user might want do define that the control popup should only be available to objects with the suffix _IO. It is possible to define multiple suffixes by using a comma \",\" to seperate the different suffixes. Example: _IO,_IS,_M will resultat in that only objects with any of the suffixes will have the control page visible. Privileges requirements \u00b6 The privileges column allows the user to define which user privileges are required to show a certain page. For instance only users with the privilege \"control\" should be able to show the control page. This is useful to restric which users should be able to access what. It is possible to define multiple privilges using a comma \",\" to seperate the different privileges. Example: Control,EditUsers. If the user has any of these privilges they will be able to see the control page. The config page","title":"Config"},{"location":"Workviews/Common_Popups/Config/#suffix-requirements","text":"The column Suffix requirements allows the user to define which popup pages should be available depending och which suffixes the object has. For instance a user might want do define that the control popup should only be available to objects with the suffix _IO. It is possible to define multiple suffixes by using a comma \",\" to seperate the different suffixes. Example: _IO,_IS,_M will resultat in that only objects with any of the suffixes will have the control page visible.","title":"Suffix requirements"},{"location":"Workviews/Common_Popups/Config/#privileges-requirements","text":"The privileges column allows the user to define which user privileges are required to show a certain page. For instance only users with the privilege \"control\" should be able to show the control page. This is useful to restric which users should be able to access what. It is possible to define multiple privilges using a comma \",\" to seperate the different privileges. Example: Control,EditUsers. If the user has any of these privilges they will be able to see the control page. The config page","title":"Privileges requirements"},{"location":"Workviews/Common_Popups/Control/","text":"The control popup allows the user to both view and change the value of all control suffixes connected to the object that opened the view. The control page is divided into two parts: Controls & Control Status . The difference between the two is described below. Control Status \u00b6 The control status allows the user to display all suffixes defined under the category \"control_status\" in Suffix.JSON. Only boolean values can be displayed. The control status view for Skane.Kallby.AS01_Pump06 Controls \u00b6 The control part automatically displays all suffixes defined under the category \"control\" in Suffix.JSON. Depending on if the tag is defined as a boolean or an interger/double either a toggle switch or a spin box will be displayed to allow the user to change the value of the tag. The controls view for Skane.Kallby.AS01_Pump06","title":"Control"},{"location":"Workviews/Common_Popups/Control/#control-status","text":"The control status allows the user to display all suffixes defined under the category \"control_status\" in Suffix.JSON. Only boolean values can be displayed. The control status view for Skane.Kallby.AS01_Pump06","title":"Control Status"},{"location":"Workviews/Common_Popups/Control/#controls","text":"The control part automatically displays all suffixes defined under the category \"control\" in Suffix.JSON. Depending on if the tag is defined as a boolean or an interger/double either a toggle switch or a spin box will be displayed to allow the user to change the value of the tag. The controls view for Skane.Kallby.AS01_Pump06","title":"Controls"},{"location":"Workviews/Common_Popups/DEBUG/","text":"The debug view is intended for developers and for debugging. It displays all tags connected to the object and allows all of them to be manipulated. At the top of the page are all tags which are defined as booleans. They can be turned on/off by just clicking the button. Holding the mouse over any button will also display a tooltip with a short description of the variable. At the bottom of the page are all tags which are not booleans. Their value can be set to anything. Note: The non-boolean values are not updated automatically. The user has to press \"refresh\" in order to get the latest value for the non-boolean tags. The debug view for Skane.Kallby.AS01_Pump06","title":"DEBUG"},{"location":"Workviews/Common_Popups/History/","text":"The history page allows the user to view historic values of a tag using a database. All tags will be listed in a list. The user can then select which tag(s) they want to follow. There are also settings available to hide/show both the ruler and the legend. It is also possible to choose a tracking interval, with 0 meaning that the graph won't update. Note: In order for this to work, the selected tag must be logged to a database using a logger. If a non-logged variable is selected no data will be shown. If serveral loggers are logging the selected variable, the logger with the highest sampling frequency will be chosen. The history view for Skane.Kallby.AS01_Pump06","title":"History"},{"location":"Workviews/Common_Popups/Machine_Card/","text":"Machine Card \u00b6 Under development","title":"Machine Card"},{"location":"Workviews/Common_Popups/Machine_Card/#machine-card","text":"Under development","title":"Machine Card"},{"location":"Workviews/Common_Popups/Object_Info/","text":"The object info view lists all tags connected to their object. The full tagname has been cut to only show the suffix. In the next column shows the description to the suffix which is defined in the Suffix.JSON file. The third and forth column shows both the unit and the type of the tag respectivly. The final column shows the description of the tag. The object info view for Skane.Kallby.AS01_Pump06","title":"Object Info"},{"location":"Workviews/Common_Popups/Tab/","text":"Tab is the starting view of any object that will come up when the user clicks on any dynTouch. The tab view shows the properties of the object, such as: connect, device and system. The tab view also allows the user to select which suffix the value select support object will display. The tab view for Skane.Kallby.AS01_Pump06. One value select is also connected to the object group which can be seen under Value settings.","title":"Tab"},{"location":"Workviews/Common_Popups/Trend/","text":"The trend view works similarly to the history popup . However the trend view is not able to show historic values of a tag and instead starts tracking the tag value once the user selects the specific tag. This does however allow all tags to be displayed and tracked since they do not need to be logged to a database. Also on the trend view are some settings, such as: show/hide legend and also the ability to change the scale of the Y-axis. The trend view for Skane.Kallby.AS01_Pump06.","title":"Trend"},{"location":"Workviews/Main_Menu/","text":"Main Menu ====","title":"Index"},{"location":"Workviews/Main_Menu/Alarm/","text":"","title":"Alarm"},{"location":"Workviews/Main_Menu/Dashboard/","text":"","title":"Dashboard"},{"location":"Workviews/Main_Menu/Maintainance/","text":"","title":"Maintainance"},{"location":"Workviews/Main_Menu/Map/","text":"","title":"Map"}]}