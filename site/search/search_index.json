{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Home Welcome to the WideQuick Water & Wastewater application documentation. Here one can expect to find documentation regarding the following: Smart Objects The Object Library Workviews and Navigation Scripts Database Tag structure Suffixes Abbreviations For conveniance of the writer the use of several abbreiviations will be used throughout this document. These should be added to the following list: Word/Term Abbreviation Water & Wastewater Treatment W&W WideQuick WQ Developer DEV Requirements REQ Master Terminal Unit MTU Remote Terminal Unit RTU Input/Output I/O International Organization for Standardization ISO Open Systems Interconnection OSI Supervisory Control and Data Acquisition SCADA","title":"Home"},{"location":"#home","text":"Welcome to the WideQuick Water & Wastewater application documentation. Here one can expect to find documentation regarding the following: Smart Objects The Object Library Workviews and Navigation Scripts Database Tag structure Suffixes","title":"Home"},{"location":"#abbreviations","text":"For conveniance of the writer the use of several abbreiviations will be used throughout this document. These should be added to the following list: Word/Term Abbreviation Water & Wastewater Treatment W&W WideQuick WQ Developer DEV Requirements REQ Master Terminal Unit MTU Remote Terminal Unit RTU Input/Output I/O International Organization for Standardization ISO Open Systems Interconnection OSI Supervisory Control and Data Acquisition SCADA","title":"Abbreviations"},{"location":"Getting_Started/","text":"","title":"Getting Started"},{"location":"Alarms/","text":"Alarms There are two different types of alarms in WideQuick VA. One of them is user defined alarms and the other is alarm tags. The difference between the two will be explained below. NOTE: For the following examples we will use: Skane.Kallby.AS01_Motor as an example. User defined alarms User defined alarms are alarms that can be created by the user. To create an alarm and connect it to an object. Right click on alarms in the project tree and select \"Add group\". Next name the group according to the following structure: Alarm.Connection.Device EXAMPLE: Alarm.Skane.Kallby Next create a new alarm acording to the following strucutre: System_Object_UserDefinedName EXAMPLE: AS01_Motor_MVH BILD The newly created alarm will then be visible in both the general alarm page(L\u00e4nk?) and the Alarm Popup for the specific object. In this case Skane.Kallby.AS01_Motor. See picture below: The alarm popup page for Skane.Kallby.AS01_Pump06 Alarm tags Alarm tags are all tags with a suffix belonging to the alarm or warning group in suffix.JSON. See exampel below. Once this tag turns high the icon for the object connected to this tag will turn yellow/red depending on if it is an alarm or a warning. Furthermore if the smart-object contains an Alarm Status the alarms status indicator will be visible. Example: Suffixes defined as Alarms and warnings in Suffix.JSON A collection of alarm tags (OPC)","title":"Index"},{"location":"Alarms/#alarms","text":"There are two different types of alarms in WideQuick VA. One of them is user defined alarms and the other is alarm tags. The difference between the two will be explained below. NOTE: For the following examples we will use: Skane.Kallby.AS01_Motor as an example.","title":"Alarms"},{"location":"Alarms/#user-defined-alarms","text":"User defined alarms are alarms that can be created by the user. To create an alarm and connect it to an object. Right click on alarms in the project tree and select \"Add group\". Next name the group according to the following structure: Alarm.Connection.Device EXAMPLE: Alarm.Skane.Kallby Next create a new alarm acording to the following strucutre: System_Object_UserDefinedName EXAMPLE: AS01_Motor_MVH BILD The newly created alarm will then be visible in both the general alarm page(L\u00e4nk?) and the Alarm Popup for the specific object. In this case Skane.Kallby.AS01_Motor. See picture below: The alarm popup page for Skane.Kallby.AS01_Pump06","title":"User defined alarms"},{"location":"Alarms/#alarm-tags","text":"Alarm tags are all tags with a suffix belonging to the alarm or warning group in suffix.JSON. See exampel below. Once this tag turns high the icon for the object connected to this tag will turn yellow/red depending on if it is an alarm or a warning. Furthermore if the smart-object contains an Alarm Status the alarms status indicator will be visible. Example: Suffixes defined as Alarms and warnings in Suffix.JSON A collection of alarm tags (OPC)","title":"Alarm tags"},{"location":"Common_Popups/","text":"","title":"Index"},{"location":"Common_Popups/Alarm_Popup/","text":"","title":"Alarm Popup"},{"location":"Common_Popups/Config/","text":"","title":"Config"},{"location":"Common_Popups/Control/","text":"","title":"Control"},{"location":"Common_Popups/DEBUG/","text":"","title":"DEBUG"},{"location":"Common_Popups/History/","text":"","title":"History"},{"location":"Common_Popups/Machine_Card/","text":"","title":"Machine Card"},{"location":"Common_Popups/Object_Info/","text":"","title":"Object Info"},{"location":"Common_Popups/Tab/","text":"","title":"Tab"},{"location":"Common_Popups/Trend/","text":"","title":"Trend"},{"location":"Object_Library/","text":"Welcome to the Object Library!","title":"Index"},{"location":"Object_Library/#welcome-to-the-object-library","text":"","title":"Welcome to the Object Library!"},{"location":"Object_Library/Others/","text":"sasa","title":"Index"},{"location":"Object_Library/Others/#sasa","text":"","title":"sasa"},{"location":"Object_Library/Others/Buttons/","text":"","title":"Buttons"},{"location":"Object_Library/Smart_Objects/","text":"Smart Objects With Smart Objects the user can with ease connect a tags to any object in WideQuick with the help of a couple of objects from the Object Library . These objects can be divided into: Support Objects Symbols For more information on how to create a Smart Object please visit Create a Smart Object","title":"Index"},{"location":"Object_Library/Smart_Objects/#smart-objects","text":"With Smart Objects the user can with ease connect a tags to any object in WideQuick with the help of a couple of objects from the Object Library . These objects can be divided into: Support Objects Symbols For more information on how to create a Smart Object please visit Create a Smart Object","title":"Smart Objects"},{"location":"Object_Library/Smart_Objects/Create_a_Smart_Object/","text":"Create a Smart Object To create a Smart Object there are five steps to follow. The steps to follow are: Chose a symbol that represents the object you want to create, for instance a pump symbol from the Object Library. Pick a number of support objects that will highlight information about the object. Pick a dynTouch from the object library and group all, Ctrl + G , of the objects together. Once the objects are grouped, go through the properties tab and fill out any properties needed for the support objects, information of what they need can be found in their individual page. Start WideQuick VA and confirm that the object tag have been connected.","title":"Create a Smart Object"},{"location":"Object_Library/Smart_Objects/Create_a_Smart_Object/#create-a-smart-object","text":"To create a Smart Object there are five steps to follow. The steps to follow are: Chose a symbol that represents the object you want to create, for instance a pump symbol from the Object Library. Pick a number of support objects that will highlight information about the object. Pick a dynTouch from the object library and group all, Ctrl + G , of the objects together. Once the objects are grouped, go through the properties tab and fill out any properties needed for the support objects, information of what they need can be found in their individual page. Start WideQuick VA and confirm that the object tag have been connected.","title":"Create a Smart Object"},{"location":"Object_Library/Smart_Objects/Create_a_Support_Object/","text":"Create a Support Object When creating a new support object only there really aren't any limits to what you can create. However , there are some guidelines that you should follow to ensure that the new object will work alongside with the already existing ones. There are also functions in the Script Libraries that will make the process easier and quicker. Connecting to the tag structure through dynTouch For a support object to connect to the tag in the DataStore it needs the name of the tag it wants to connect to. The object that ensures all the other support objects have access to this is dynTouch . To get a hold of how this works, please read the onLoad() script on the dynTouch object and look at the already available support objects. A couple of useful functions There are functions available in the script library that today is used by existing support objects here is a list of a couple of them : scSuffix.getDescription() scSuffix.getSuffix() scSuffix.getAlarm() scObjectAnimation.rotateBinary() scObjectAnimation.rotate() scObjectAnimation.alarmColor() More functions that could be useful can be found in the Script part of this documentation.","title":"Create a Support Object"},{"location":"Object_Library/Smart_Objects/Create_a_Support_Object/#create-a-support-object","text":"When creating a new support object only there really aren't any limits to what you can create. However , there are some guidelines that you should follow to ensure that the new object will work alongside with the already existing ones. There are also functions in the Script Libraries that will make the process easier and quicker.","title":"Create a Support Object"},{"location":"Object_Library/Smart_Objects/Create_a_Support_Object/#connecting-to-the-tag-structure-through-dyntouch","text":"For a support object to connect to the tag in the DataStore it needs the name of the tag it wants to connect to. The object that ensures all the other support objects have access to this is dynTouch . To get a hold of how this works, please read the onLoad() script on the dynTouch object and look at the already available support objects.","title":"Connecting to the tag structure through dynTouch"},{"location":"Object_Library/Smart_Objects/Create_a_Support_Object/#a-couple-of-useful-functions","text":"There are functions available in the script library that today is used by existing support objects here is a list of a couple of them : scSuffix.getDescription() scSuffix.getSuffix() scSuffix.getAlarm() scObjectAnimation.rotateBinary() scObjectAnimation.rotate() scObjectAnimation.alarmColor() More functions that could be useful can be found in the Script part of this documentation.","title":"A couple of useful functions"},{"location":"Object_Library/Smart_Objects/Support_Objects/","text":"Support Objects Here you will find the following support objects. Support Object Description Alarm Status Displays a red circle if alarm active and a yellow rombus if a warning is active for object Analog Value Display Displays a tag value to a meter with warning and alarm limits Analog Value Display Bottom Displays a tag value to a meter with warning and alarm limits for low values Analog Value Display Top Displays a tag value to a meter with warning and alarm limits for high values Combo Value Allows user to show tags depending on suffix for a certain object in a drop down menu. Combo Value Desc Allows user to show tags and description depending on suffix for a certain object in a drop down menu. Gauge Displays a gauge for a tag value Name Displays the name of an object Static Value Displays Value for a predetermined tag Static Value Desc Displays value and description for a predetermined tag Status Inlcudes both a Name support object and an Alarm Status object Status Indicator Displays a boolean value as an on/off-lamp indicator Status Indicator Desc Displays a boolean value and description as an on/off-lamp indicator Toggle Allows user to Toggle a boolean value in the workview Value Select Allows user to select a value to be shown from the Tab popup dynTouch Ties together all support objects to a smart object","title":"Index"},{"location":"Object_Library/Smart_Objects/Support_Objects/#support-objects","text":"Here you will find the following support objects. Support Object Description Alarm Status Displays a red circle if alarm active and a yellow rombus if a warning is active for object Analog Value Display Displays a tag value to a meter with warning and alarm limits Analog Value Display Bottom Displays a tag value to a meter with warning and alarm limits for low values Analog Value Display Top Displays a tag value to a meter with warning and alarm limits for high values Combo Value Allows user to show tags depending on suffix for a certain object in a drop down menu. Combo Value Desc Allows user to show tags and description depending on suffix for a certain object in a drop down menu. Gauge Displays a gauge for a tag value Name Displays the name of an object Static Value Displays Value for a predetermined tag Static Value Desc Displays value and description for a predetermined tag Status Inlcudes both a Name support object and an Alarm Status object Status Indicator Displays a boolean value as an on/off-lamp indicator Status Indicator Desc Displays a boolean value and description as an on/off-lamp indicator Toggle Allows user to Toggle a boolean value in the workview Value Select Allows user to select a value to be shown from the Tab popup dynTouch Ties together all support objects to a smart object","title":"Support Objects"},{"location":"Object_Library/Smart_Objects/Support_Objects/Alarm_Status/","text":"Alarm Status Alarm Status is used to indicate a sum alarm for a certain object. It does this with functions scSuffix.warning() and scSuffix.alarm() in script library scSuffix . If an alarm is active a red circle will show. If a warning is active a yellow rombulus will show. What constitutes as an alarm or a warning depends on what group the tag belongs to in the json file, suffix.json .","title":"Alarm Status"},{"location":"Object_Library/Smart_Objects/Support_Objects/Alarm_Status/#alarm-status","text":"Alarm Status is used to indicate a sum alarm for a certain object. It does this with functions scSuffix.warning() and scSuffix.alarm() in script library scSuffix . If an alarm is active a red circle will show. If a warning is active a yellow rombulus will show. What constitutes as an alarm or a warning depends on what group the tag belongs to in the json file, suffix.json .","title":"Alarm Status"},{"location":"Object_Library/Smart_Objects/Support_Objects/Analog_Value_Display/","text":"Analog Value Display Analog Value Display gives a visual representation of a signal relative to its limits. This is a powerful way of representing data when the raw data is hard to put into context. For example a certain cubic meter of a fluid might only provide useful information if you know how big the tank is relative to that number. Properties Propery Description min Lowest Value max Maximum Value warningYellow % of total meter for yellow limit warningRed % of total meter for red limit Suffix suffix for value to display","title":"Analog Value Display"},{"location":"Object_Library/Smart_Objects/Support_Objects/Analog_Value_Display/#analog-value-display","text":"Analog Value Display gives a visual representation of a signal relative to its limits. This is a powerful way of representing data when the raw data is hard to put into context. For example a certain cubic meter of a fluid might only provide useful information if you know how big the tank is relative to that number.","title":"Analog Value Display"},{"location":"Object_Library/Smart_Objects/Support_Objects/Analog_Value_Display/#properties","text":"Propery Description min Lowest Value max Maximum Value warningYellow % of total meter for yellow limit warningRed % of total meter for red limit Suffix suffix for value to display","title":"Properties"},{"location":"Object_Library/Smart_Objects/Support_Objects/Analog_Value_Display_Bottom/","text":"Analog Value Display Bottom Analog Value Display gives a visual representation of a signal relative to its limits. This is a powerful way of representing data when the raw data is hard to put into context. For example a certain cubic meter of a fluid might only provide useful information if you know how big the tank is relative to that number. Use this when low values are the area of concern. Properties Propery Description min Lowest Value max Maximum Value warningYellow % of total meter for yellow limit warningRed % of total meter for red limit suffix Suffix for value to display","title":"Analog Value Display Bottom"},{"location":"Object_Library/Smart_Objects/Support_Objects/Analog_Value_Display_Bottom/#analog-value-display-bottom","text":"Analog Value Display gives a visual representation of a signal relative to its limits. This is a powerful way of representing data when the raw data is hard to put into context. For example a certain cubic meter of a fluid might only provide useful information if you know how big the tank is relative to that number. Use this when low values are the area of concern.","title":"Analog Value Display Bottom"},{"location":"Object_Library/Smart_Objects/Support_Objects/Analog_Value_Display_Bottom/#properties","text":"Propery Description min Lowest Value max Maximum Value warningYellow % of total meter for yellow limit warningRed % of total meter for red limit suffix Suffix for value to display","title":"Properties"},{"location":"Object_Library/Smart_Objects/Support_Objects/Analog_Value_Display_Top/","text":"Analog Value Display Top Analog Value Display gives a visual representation of a signal relative to its limits. This is a powerful way of representing data when the raw data is hard to put into context. For example a certain cubic meter of a fluid might only provide useful information if you know how big the tank is relative to that number. Use this Analog Vaule Display when high values are areas of concern. Properties Propery Description min Lowest Value max Maximum Value warningYellow % of total meter for yellow limit warningRed % of total meter for red limit suffix Suffix for value to display","title":"Analog Value Display Top"},{"location":"Object_Library/Smart_Objects/Support_Objects/Analog_Value_Display_Top/#analog-value-display-top","text":"Analog Value Display gives a visual representation of a signal relative to its limits. This is a powerful way of representing data when the raw data is hard to put into context. For example a certain cubic meter of a fluid might only provide useful information if you know how big the tank is relative to that number. Use this Analog Vaule Display when high values are areas of concern.","title":"Analog Value Display Top"},{"location":"Object_Library/Smart_Objects/Support_Objects/Analog_Value_Display_Top/#properties","text":"Propery Description min Lowest Value max Maximum Value warningYellow % of total meter for yellow limit warningRed % of total meter for red limit suffix Suffix for value to display","title":"Properties"},{"location":"Object_Library/Smart_Objects/Support_Objects/Combo_Value/","text":"Combo Value This support object will allow the operator to display values and units for all the suffixes available for the object by chosing it in the drop down menu. Description Property Description fontSize Sets size of text in support object if non is provided size is defined by internal variable supportGlobalFontSize","title":"Combo Value"},{"location":"Object_Library/Smart_Objects/Support_Objects/Combo_Value/#combo-value","text":"This support object will allow the operator to display values and units for all the suffixes available for the object by chosing it in the drop down menu.","title":"Combo Value"},{"location":"Object_Library/Smart_Objects/Support_Objects/Combo_Value/#description","text":"Property Description fontSize Sets size of text in support object if non is provided size is defined by internal variable supportGlobalFontSize","title":"Description"},{"location":"Object_Library/Smart_Objects/Support_Objects/Combo_Value_Desc/","text":"Combo Value Desc This support object will allow the operator to display values and units for all the suffixes available for the object by chosing it in the drop down menu. It will also display the description for the specified suffix with function scSuffix.getDescription() . Description Property Description fontSize Sets size of text in support object if non is provided size is defined by internal variable supportGlobalFontSize","title":"Combo Value Desc"},{"location":"Object_Library/Smart_Objects/Support_Objects/Combo_Value_Desc/#combo-value-desc","text":"This support object will allow the operator to display values and units for all the suffixes available for the object by chosing it in the drop down menu. It will also display the description for the specified suffix with function scSuffix.getDescription() .","title":"Combo Value Desc"},{"location":"Object_Library/Smart_Objects/Support_Objects/Combo_Value_Desc/#description","text":"Property Description fontSize Sets size of text in support object if non is provided size is defined by internal variable supportGlobalFontSize","title":"Description"},{"location":"Object_Library/Smart_Objects/Support_Objects/Gauge/","text":"Gauge Gauge is a support object that displays a tag value in a half circle as well as a numeric with unit. Best practise when using this object is to disconnect it and feed the min and max values into WideQuick Designer. However, if you desire for the gauge to be more flexible in runtime use dynamics. Properties Property Description val tag you disre to diplay in runtime Name Name displayed at top of the gauge","title":"Gauge"},{"location":"Object_Library/Smart_Objects/Support_Objects/Gauge/#gauge","text":"Gauge is a support object that displays a tag value in a half circle as well as a numeric with unit. Best practise when using this object is to disconnect it and feed the min and max values into WideQuick Designer. However, if you desire for the gauge to be more flexible in runtime use dynamics.","title":"Gauge"},{"location":"Object_Library/Smart_Objects/Support_Objects/Gauge/#properties","text":"Property Description val tag you disre to diplay in runtime Name Name displayed at top of the gauge","title":"Properties"},{"location":"Object_Library/Smart_Objects/Support_Objects/Name/","text":"Name This support object displays the name of the object it belongs to. The fontsize of this object is either set by its property or by the internal variable supportGlobalFontSize . Properties Property Description fontSize Sets fontSize of this object","title":"Name"},{"location":"Object_Library/Smart_Objects/Support_Objects/Name/#name","text":"This support object displays the name of the object it belongs to. The fontsize of this object is either set by its property or by the internal variable supportGlobalFontSize .","title":"Name"},{"location":"Object_Library/Smart_Objects/Support_Objects/Name/#properties","text":"Property Description fontSize Sets fontSize of this object","title":"Properties"},{"location":"Object_Library/Smart_Objects/Support_Objects/Static_Value/","text":"Static Value Description Static Value Description displays a tag value for tag suffix . Properties Property Description suffix Suffix that you want to show for this object fontSize Sets fontSize of this object","title":"Static Value"},{"location":"Object_Library/Smart_Objects/Support_Objects/Static_Value/#static-value-description","text":"Static Value Description displays a tag value for tag suffix .","title":"Static Value Description"},{"location":"Object_Library/Smart_Objects/Support_Objects/Static_Value/#properties","text":"Property Description suffix Suffix that you want to show for this object fontSize Sets fontSize of this object","title":"Properties"},{"location":"Object_Library/Smart_Objects/Support_Objects/Static_Value_Desc/","text":"Static Value Description Static Value Description displays a tag value for tag suffix and the discription with function scSuffix.getDescription() . Properties Property Description suffix Suffix that you want to show for this object fontSize Sets fontSize of this object","title":"Static Value Desc"},{"location":"Object_Library/Smart_Objects/Support_Objects/Static_Value_Desc/#static-value-description","text":"Static Value Description displays a tag value for tag suffix and the discription with function scSuffix.getDescription() .","title":"Static Value Description"},{"location":"Object_Library/Smart_Objects/Support_Objects/Static_Value_Desc/#properties","text":"Property Description suffix Suffix that you want to show for this object fontSize Sets fontSize of this object","title":"Properties"},{"location":"Object_Library/Smart_Objects/Support_Objects/Status_Indicator/","text":"Status Indicator Displays a boolean value tag for property suffix as a indicator lamp. Properties Property Description suffix Suffix that you want to show for this object","title":"Status Indicator"},{"location":"Object_Library/Smart_Objects/Support_Objects/Status_Indicator/#status-indicator","text":"Displays a boolean value tag for property suffix as a indicator lamp.","title":"Status Indicator"},{"location":"Object_Library/Smart_Objects/Support_Objects/Status_Indicator/#properties","text":"Property Description suffix Suffix that you want to show for this object","title":"Properties"},{"location":"Object_Library/Smart_Objects/Support_Objects/Status_Indicator_Desc/","text":"Status Indicator Description Displays a boolean value tag for property suffix as a indicator lamp. The object also displays the suffix description that it fetches with function scSuffix.getDescription() . Font size of text is set either by fontSize or if no value is given it is set by supportGlobalFontSize . Properties Property Description suffix Suffix that you want to show for this object fontSize Sets fontSize of this object","title":"Status Indicator Desc"},{"location":"Object_Library/Smart_Objects/Support_Objects/Status_Indicator_Desc/#status-indicator-description","text":"Displays a boolean value tag for property suffix as a indicator lamp. The object also displays the suffix description that it fetches with function scSuffix.getDescription() . Font size of text is set either by fontSize or if no value is given it is set by supportGlobalFontSize .","title":"Status Indicator Description"},{"location":"Object_Library/Smart_Objects/Support_Objects/Status_Indicator_Desc/#properties","text":"Property Description suffix Suffix that you want to show for this object fontSize Sets fontSize of this object","title":"Properties"},{"location":"Object_Library/Smart_Objects/Support_Objects/Toggle/","text":"Toggle Allows user to Toggle a boolean value directly in the workview. suffix sets what tag is being toggled.Font size of text is set either by fontSize or if no value is given it is set by supportGlobalFontSize . Properties Property Description suffix Suffix that you want to show for this object fontSize Sets fontSize of this object","title":"Toggle"},{"location":"Object_Library/Smart_Objects/Support_Objects/Toggle/#toggle","text":"Allows user to Toggle a boolean value directly in the workview. suffix sets what tag is being toggled.Font size of text is set either by fontSize or if no value is given it is set by supportGlobalFontSize .","title":"Toggle"},{"location":"Object_Library/Smart_Objects/Support_Objects/Toggle/#properties","text":"Property Description suffix Suffix that you want to show for this object fontSize Sets fontSize of this object","title":"Properties"},{"location":"Object_Library/Smart_Objects/Support_Objects/Value_Select/","text":"Value Select This support object is tightly relatived to the Common Popup: Tabs . The purpose of this support object is to be able to set what values you want to display in runetime without cluttering the workview. Therefore you can select what suffix you want to display as well as if you want to show suffix description, fetched by [scSuffic.getDescription()] and unit of the tag. Font size of text is set either by fontSize or if no value is given it is set by supportGlobalFontSize . Properties Property Description stateVar This property is set by script and should not be filled out Sets path to tag in DataStore fontSize Sets fontSize of this object","title":"Value Select"},{"location":"Object_Library/Smart_Objects/Support_Objects/Value_Select/#value-select","text":"This support object is tightly relatived to the Common Popup: Tabs . The purpose of this support object is to be able to set what values you want to display in runetime without cluttering the workview. Therefore you can select what suffix you want to display as well as if you want to show suffix description, fetched by [scSuffic.getDescription()] and unit of the tag. Font size of text is set either by fontSize or if no value is given it is set by supportGlobalFontSize .","title":"Value Select"},{"location":"Object_Library/Smart_Objects/Support_Objects/Value_Select/#properties","text":"Property Description stateVar This property is set by script and should not be filled out Sets path to tag in DataStore fontSize Sets fontSize of this object","title":"Properties"},{"location":"Object_Library/Smart_Objects/Support_Objects/dynTouch/","text":"dynTouch dynTouch is the Support Object that ties all of the other Support Objects together to represent a unique smart object. Please visit Create a Smart Object for more information . Properties Property Description Connection first of three indicies for a tag name Device second of three indicies for a tag name System third of three indicies for a tag name ObjectName Name of Object For a more detailed look on the Tag Structure .","title":"dynTouch"},{"location":"Object_Library/Smart_Objects/Support_Objects/dynTouch/#dyntouch","text":"dynTouch is the Support Object that ties all of the other Support Objects together to represent a unique smart object. Please visit Create a Smart Object for more information .","title":"dynTouch"},{"location":"Object_Library/Smart_Objects/Support_Objects/dynTouch/#properties","text":"Property Description Connection first of three indicies for a tag name Device second of three indicies for a tag name System third of three indicies for a tag name ObjectName Name of Object For a more detailed look on the Tag Structure .","title":"Properties"},{"location":"Object_Library/Symbols/","text":"Symbols Many of the symbols in WideQuick VA are derived from a standardized set of Piping and Instrumentation diagram, P&ID, symbols. They exist for all major components and lines, such as valves, vessels, pumps, compressors. The ISA S5.1, ISO 10628, and BS 5070 cover the standardization of P&ID symbols. Currently the following symbol categories are available: Grates Motors Pipes Pumps Sensors Valves Vessles","title":"Index"},{"location":"Object_Library/Symbols/#symbols","text":"Many of the symbols in WideQuick VA are derived from a standardized set of Piping and Instrumentation diagram, P&ID, symbols. They exist for all major components and lines, such as valves, vessels, pumps, compressors. The ISA S5.1, ISO 10628, and BS 5070 cover the standardization of P&ID symbols. Currently the following symbol categories are available: Grates Motors Pipes Pumps Sensors Valves Vessles","title":"Symbols"},{"location":"Object_Library/Symbols/Grates/","text":"","title":"Grates"},{"location":"Object_Library/Symbols/Motors/","text":"","title":"Motors"},{"location":"Object_Library/Symbols/Pipes/","text":"","title":"Pipes"},{"location":"Object_Library/Symbols/Pumps/","text":"","title":"Pumps"},{"location":"Object_Library/Symbols/Sensors/","text":"","title":"Sensors"},{"location":"Object_Library/Symbols/Valves/","text":"","title":"Valves"},{"location":"Object_Library/Symbols/Vessels/","text":"Vessels","title":"Vessels"},{"location":"Object_Library/Symbols/Vessels/#vessels","text":"","title":"Vessels"},{"location":"Scripts/","text":"Git As this thesis project aims to be embryo of Kentima\u00b4s Water and Wastewater Treatment application in the future it is important to have clear guidelines of how development enfolds as the number of developers and users increase. The following is a number of ways that we intend to maintain our codebase. The Git will as of right now be hosted on GitHub Version Handling will eventually be handled by Kentima's developer server. Git Workflow The workflow chosen is Feature Branch Workflow. This means every added feature, in this projects case smart objects or work-views for the SCADA, is developed in a separate branch. This makes it so that multiple developers can work simultaneously without disturbing the main codebase, maintaining a main branch without broken code. Another advantage is the ease of making discussion around a feature by pull requests. Read more here! Terminal shorthands","title":"Index"},{"location":"Scripts/#git","text":"As this thesis project aims to be embryo of Kentima\u00b4s Water and Wastewater Treatment application in the future it is important to have clear guidelines of how development enfolds as the number of developers and users increase. The following is a number of ways that we intend to maintain our codebase. The Git will as of right now be hosted on GitHub Version Handling will eventually be handled by Kentima's developer server.","title":"Git"},{"location":"Scripts/#git-workflow","text":"The workflow chosen is Feature Branch Workflow. This means every added feature, in this projects case smart objects or work-views for the SCADA, is developed in a separate branch. This makes it so that multiple developers can work simultaneously without disturbing the main codebase, maintaining a main branch without broken code. Another advantage is the ease of making discussion around a feature by pull requests. Read more here!","title":"Git Workflow"},{"location":"Scripts/#terminal-shorthands","text":"","title":"Terminal shorthands"},{"location":"Scripts/#_1","text":"","title":""},{"location":"Scripts/scAlert/","text":"ScAlert Function Parameters","title":"scAlert"},{"location":"Scripts/scAlert/#scalert","text":"","title":"ScAlert"},{"location":"Scripts/scAlert/#function","text":"","title":"Function"},{"location":"Scripts/scAlert/#parameters","text":"","title":"Parameters"},{"location":"Suffixes/","text":"","title":"Index"},{"location":"Tag_Structure/","text":"Tag Structure WideQuick VA supports both OPC and MODBUS tags. The setup is different for OPC and MODBUS but the tagstructure is the same. Following the structure: Connection Device System Object Suffix The names of these is arbitrary and they can be named whatever the user desires. These will later be used to connect OPC tags to the different objects placed in workviews. For these examples we will use the following information as an example. Connection: Skane Device: Kallby System: AS01 Object: Pump Suffix: _MV OPC WideQuick VA support both OPC DA and OPC UA tags. To import tags right-click on DataStore in the project tree and select \"Add OPC (UA) Server\". Name the connection to whatever you want and fill in the rest of the information. NOTE: The chosen name will NOT affect how the tags will be named Next right click on the newly created server and select \"Add group\". Name the group whatever you want. NOTE: The chosen name will NOT affect how the tags will be named This will bring up a new page. Click on \"browse\" and import all desired OPC tags. Next. Rename the tags in the colomun \"WideQuick Name\". Rename all tags to follow the structure: Connection.Device.System_Object_Suffix Example: Skane.Kallby.AS01_Pump_MV MODBUS MODBUS tags follow the same structure as OPC tags. But due to differences in WideQuick the naming process is a bit different. First right-click on DataStore in the project tree and select \"Add Modbus ... connection\". NOTE: The name of the connection will be later become the \"Connection\" part in the tagName so choose the name wisely. In our example this would be \"Skane\" Next right-click on the newly created connection and select \"Add Device\". NOTE: THe name of the device will later become the \"Device\" part in the tagName so choose the name wisely. In our example this would \"Kallby\" This will bring up a new page. Click on \"add\". Name the new post according to the following structure: System_Object_Suffix In our example this would be: AS01_Motor_MV See below:","title":"Index"},{"location":"Tag_Structure/#tag-structure","text":"WideQuick VA supports both OPC and MODBUS tags. The setup is different for OPC and MODBUS but the tagstructure is the same. Following the structure: Connection Device System Object Suffix The names of these is arbitrary and they can be named whatever the user desires. These will later be used to connect OPC tags to the different objects placed in workviews. For these examples we will use the following information as an example. Connection: Skane Device: Kallby System: AS01 Object: Pump Suffix: _MV","title":"Tag Structure"},{"location":"Tag_Structure/#opc","text":"WideQuick VA support both OPC DA and OPC UA tags. To import tags right-click on DataStore in the project tree and select \"Add OPC (UA) Server\". Name the connection to whatever you want and fill in the rest of the information. NOTE: The chosen name will NOT affect how the tags will be named Next right click on the newly created server and select \"Add group\". Name the group whatever you want. NOTE: The chosen name will NOT affect how the tags will be named This will bring up a new page. Click on \"browse\" and import all desired OPC tags. Next. Rename the tags in the colomun \"WideQuick Name\". Rename all tags to follow the structure: Connection.Device.System_Object_Suffix Example: Skane.Kallby.AS01_Pump_MV","title":"OPC"},{"location":"Tag_Structure/#modbus","text":"MODBUS tags follow the same structure as OPC tags. But due to differences in WideQuick the naming process is a bit different. First right-click on DataStore in the project tree and select \"Add Modbus ... connection\". NOTE: The name of the connection will be later become the \"Connection\" part in the tagName so choose the name wisely. In our example this would be \"Skane\" Next right-click on the newly created connection and select \"Add Device\". NOTE: THe name of the device will later become the \"Device\" part in the tagName so choose the name wisely. In our example this would \"Kallby\" This will bring up a new page. Click on \"add\". Name the new post according to the following structure: System_Object_Suffix In our example this would be: AS01_Motor_MV See below:","title":"MODBUS"},{"location":"Workviews/","text":"Hello","title":"Index"},{"location":"Workviews/Creating_workviews/","text":"Introduction Creating new workviews in WideQuick VA is a very quick and easy process. Once the system and workviews have been created a link to them will be auto-generated in the navigation tree. Creating a workview folder The first step in creating workviews in WideQuick VA is to create a folder where the workviews will be placed. To do this right click on the Workspace folder inside workviews. Select \"Add Group\" as seen below: Name the folder. This folder will be called the \"System folder\" from here on. The name of the system folder is what will be shown in the navigation tree. This is automatically generated as seen below: Creating a workview Once a \"System folder\" has been created the next step is to create the workviews. Right click on the system folder you just created. Click \"Add workview\". Name the workview. WideQuick VA will now auto-generate both the system folder and all workviews and display them in the Navigation tree in runtime.","title":"Creating workviews"},{"location":"Workviews/Creating_workviews/#introduction","text":"Creating new workviews in WideQuick VA is a very quick and easy process. Once the system and workviews have been created a link to them will be auto-generated in the navigation tree.","title":"Introduction"},{"location":"Workviews/Creating_workviews/#creating-a-workview-folder","text":"The first step in creating workviews in WideQuick VA is to create a folder where the workviews will be placed. To do this right click on the Workspace folder inside workviews. Select \"Add Group\" as seen below: Name the folder. This folder will be called the \"System folder\" from here on. The name of the system folder is what will be shown in the navigation tree. This is automatically generated as seen below:","title":"Creating a workview folder"},{"location":"Workviews/Creating_workviews/#creating-a-workview","text":"Once a \"System folder\" has been created the next step is to create the workviews. Right click on the system folder you just created. Click \"Add workview\". Name the workview. WideQuick VA will now auto-generate both the system folder and all workviews and display them in the Navigation tree in runtime.","title":"Creating a workview"}]}